{
    "types": [
        {
            "name": "duration",
            "type": "double",
            "description": "The duration of the operation in milliseconds"
        },
        {
            "name": "result",
            "allowedValues": ["Succeeded", "Failed", "Cancelled"],
            "description": "The result of the operation"
        },
        {
            "name": "serviceType",
            "allowedValues": ["ecs", "cloudformation", "lambda", "logs", "s3", "schemas"],
            "type": "string",
            "description": "The name of the AWS service acted on. These values come from the AWS SDK. To find them in the JAVA SDK search for SERVICE_NAME in each service client."
        },
        {
            "name": "name",
            "type": "string",
            "description": "A generic name metadata"
        },
        {
            "name": "attempts",
            "type": "int",
            "description": "A generic number of attempts"
        },
        {
            "name": "version",
            "type": "string",
            "description": "A generic version metadata"
        },
        {
            "name": "reason",
            "type": "string",
            "description": "The reason for a metric or exception depending on context"
        },
        {
            "name": "eventBridgeSchema",
            "type": "string",
            "description": "The name of the EventBridge Schema used in the operation"
        },
        {
            "name": "runtime",
            "type": "string",
            "allowedValues": [
                "dotnetcore2.1",
                "nodejs12.x",
                "nodejs10.x",
                "nodejs8.10",
                "ruby2.5",
                "java8",
                "java11",
                "go1.x",
                "python3.8",
                "python3.7",
                "python3.6",
                "python2.7"
            ],
            "description": "The lambda runtime"
        },
        {
            "name": "runtimeString",
            "type": "string",
            "description": "A free-text field to record runtimes that may be separate from Lambda runtimes"
        },
        {
            "name": "templateName",
            "type": "string",
            "description": "Generic name of a template"
        },
        {
            "name": "debug",
            "type": "boolean",
            "description": "If the action was run in debug mode or not"
        },
        {
            "name": "oldVersion",
            "type": "string",
            "description": "The old version of something. Useful when updating dependent resources."
        },
        {
            "name": "update",
            "type": "boolean",
            "description": "If the operation was an update or not"
        },
        {
            "name": "schemaLanguage",
            "type": "string",
            "allowedValues": ["Java8", "Python36", "TypeScript3"],
            "description": "Languages targeted by the schemas service"
        },
        {
            "name": "workflowToken",
            "type": "string",
            "description": "A token used for flow metrics to link calls together"
        },
        {
            "name": "enabled",
            "type": "boolean",
            "description": "True if turned on, false if turned off"
        }
    ],
    "metrics": [
        {
            "name": "aws_copyArn",
            "description": "Copy the ARN of an AWS resource",
            "metadata": [{ "type": "serviceType" }]
        },
        {
            "name": "aws_deleteResource",
            "description": "Delete an AWS resource",
            "metadata": [{ "type": "serviceType" }, { "type": "result" }]
        },
        {
            "name": "aws_setCredentials",
            "description": "Select a credentials profile",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "aws_openCredentials",
            "description": "Open the credentials file",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "aws_createCredentials",
            "description": "Create a new credentials file"
        },
        {
            "name": "aws_injectCredentials",
            "description": "Inject selected AWS credentials into a third-party run (e.g. RunConfiguration)",
            "metadata": [{ "type": "result" }, { "type": "runtimeString", "required": false }]
        },
        {
            "name": "aws_validateCredentials",
            "description": "Validate credentials when selecting new credentials",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "aws_help",
            "description": "Open docs for the extension"
        },
        {
            "name": "aws_helpQuickstart",
            "description": "Open the quickstart guide"
        },
        {
            "name": "aws_showExtensionSource",
            "description": "Open the repo for the extension"
        },
        {
            "name": "aws_refreshExplorer",
            "description": "Refresh the AWS explorer window"
        },
        {
            "name": "aws_reportPluginIssue",
            "description": "Report an issue with the plugin"
        },
        {
            "name": "cloudwatchlogs_openGroup",
            "description": "Open the CloudWatch Logs group window. ServiceType indicates that it was opened from a different service (like directly from an ECS container)",
            "metadata": [{ "type": "result" }, { "type": "serviceType", "required": false }]
        },
        {
            "name": "cloudwatchlogs_openStream",
            "description": "Open a CloudWatch Logs stream in the window. ServiceType indicates that it was opened from a different service (like directly from an ECS container)",
            "metadata": [{ "type": "result" }, { "type": "serviceType", "required": false }]
        },
        {
            "name": "cloudwatchlogs_downloadStreamToFile",
            "unit": "Bytes",
            "description": "Download a stream to a file on disk. Value indicates the final size of the formatted stream.",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudwatchlogs_openStreamInEditor",
            "description": "Download a stream to memory then open in an editor.",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudwatchlogs_viewCurrentMessagesInEditor",
            "description": "Copy the currently open (possibly filtered) messages to an editor",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudwatchlogs_wrapEvents",
            "description": "Word wrap events off/on",
            "metadata": [{ "type": "enabled" }]
        },
        {
            "name": "cloudwatchlogs_tailStream",
            "description": "Tail stream off/on",
            "metadata": [{ "type": "enabled" }]
        },
        {
            "name": "cloudwatchlogs_refreshGroup",
            "description": "Refresh group is pressed"
        },
        {
            "name": "cloudwatchlogs_refreshStream",
            "description": "Refresh stream is pressed"
        },
        {
            "name": "cloudwatchlogs_searchStream",
            "description": "Called when a stream is searched",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudwatchlogs_searchGroup",
            "description": "Called when a group is searched",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudwatchlogs_showEventsAround",
            "description": "Show event around a time period in ms specified by Value",
            "unit": "Milliseconds",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudformation_open",
            "description": "Open a CloudFormation stack in the stack viewer"
        },
        {
            "name": "feedback_result",
            "description": "Called while submitting in-IDE feedback",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "lambda_delete",
            "description": "called when deleting lambdas remotely",
            "unit": "None",
            "metadata": [{ "type": "duration" }, { "type": "result" }]
        },
        {
            "name": "lambda_configure",
            "description": "Called when opening the local configuration of a Lambda to edit",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "lambda_create",
            "description": "Called when creating lambdas remotely",
            "metadata": [{ "type": "runtime" }]
        },
        {
            "name": "lambda_goToHandler",
            "description": "Jump to a lambda handler from elsewhere",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "lambda_editFunction",
            "description": "Called when creating lambdas remotely",
            "metadata": [{ "type": "update", "required": false }, { "type": "result" }]
        },
        {
            "name": "lambda_invokeRemote",
            "description": "Called when invoking lambdas remotely",
            "metadata": [{ "type": "runtime", "required": false }, { "type": "result" }]
        },
        {
            "name": "lambda_invokeLocal",
            "description": "Called when invoking lambdas locally (with SAM in most toolkits)",
            "metadata": [{ "type": "runtime", "required": false }, { "type": "result" }, { "type": "debug" }]
        },
        {
            "name": "cloudformation_delete",
            "description": "Called when deleting a cloudformation stack",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "sam_deploy",
            "description": "Called when deploying a sam application",
            "metadata": [{ "type": "result" }, { "type": "version", "required": false }]
        },
        {
            "name": "sam_init",
            "description": "Called when initing a sam application",
            "metadata": [
                { "type": "result" },
                { "type": "name", "required": false },
                { "type": "runtime", "required": false },
                { "type": "templateName", "required": false },
                { "type": "version", "required": false },
                { "type": "reason", "required": false },
                { "type": "eventBridgeSchema", "required": false }
            ]
        },
        {
            "name": "schemas_view",
            "description": "Called when selecting an EventBridge schema to view",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "schemas_download",
            "description": "Called when downloading an EventBridge schema",
            "metadata": [{ "type": "result" }, { "type": "schemaLanguage", "required": false }]
        },
        {
            "name": "schemas_search",
            "description": "Called when searching an EventBridge schema registry",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "session_start",
            "description": "Called when starting the plugin"
        },
        {
            "name": "session_end",
            "description": "Called when stopping the IDE on a best effort basis"
        },
        {
            "name": "s3_copyBucketName",
            "description": "Copy the bucket name to the clipboard"
        },
        {
            "name": "s3_copyPath",
            "description": "Copy the path of a S3 object to the clipboard"
        },
        {
            "name": "s3_createBucket",
            "description": "Create a S3 bucket",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "s3_deleteBucket",
            "description": "Delete a S3 bucket",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "s3_deleteObject",
            "description": "Delete a single S3 object",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "s3_downloadObject",
            "description": "Download a single S3 object",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "s3_downloadObjects",
            "description": "Download multiple S3 objects",
            "unit": "Count",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "s3_uploadObject",
            "description": "Upload a single S3 object",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "s3_renameObject",
            "description": "Rename a single S3 object",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "s3_uploadObjects",
            "description": "Upload multiple S3 objects",
            "unit": "Count",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "s3_openEditor",
            "description": "Open a view of a S3 bucket",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "toolkit_init",
            "description": "The Toolkit has completed initialization",
            "metadata": [{ "type": "duration" }]
        }
    ]
}
