{
    "types": [
        {
            "name": "appRunnerServiceSource",
            "type": "string",
            "allowedValues": ["ecr", "ecrPublic", "repository"],
            "description": "The source artifact of an App Runner service"
        },
        {
            "name": "appRunnerServiceStatus",
            "type": "string",
            "allowedValues": ["CREATE_FAILED", "RUNNING", "DELETED", "DELETE_FAILED", "PAUSED", "OPERATION_IN_PROGRESS"],
            "description": "The current state of the App Runner service"
        },
        {
            "name": "awsFiletype",
            "type": "string",
            "allowedValues": [
                "awsCredentials",
                "cloudformation",
                "cloudformationSam",
                "codebuildBuildspec",
                "ecsTask",
                "eventbridgeSchema",
                "iamPolicy",
                "samconfig",
                "serverless",
                "stepfunctionsAsl",
                "smithyModel",
                "ssmDocument",
                "other"
            ],
            "description": "AWS filetype kind"
        },
        {
            "name": "cloudWatchLogsPresentation",
            "allowedValues": ["ui", "text"],
            "description": "Presentation mode used in a CloudWatch Logs operation"
        },
        {
            "name": "cloudWatchResourceType",
            "allowedValues": ["logGroup", "logGroupList", "logStream"],
            "description": "CloudWatch Logs entity"
        },
        {
            "name": "duration",
            "type": "double",
            "description": "The duration of the operation in milliseconds"
        },
        {
            "name": "result",
            "allowedValues": ["Succeeded", "Failed", "Cancelled"],
            "description": "The result of the operation"
        },
        {
            "name": "component",
            "allowedValues": ["editor", "viewer", "filesystem", "explorer", "infobar", "hover", "webview", "quickfix"],
            "description": "The IDE or OS component used for the action. (Examples: S3 download to filesystem, S3 upload from editor, ...)"
        },
        {
            "name": "hasTextFilter",
            "type": "boolean",
            "description": "A text based filter was used"
        },
        {
            "name": "hasTimeFilter",
            "type": "boolean",
            "description": "A time based filter was used"
        },
        {
            "name": "iamResourceType",
            "allowedValues": ["group", "role", "user"],
            "description": "The type of IAM resource referenced by a metric or operation"
        },
        {
            "name": "lambdaPackageType",
            "allowedValues": ["Zip", "Image"],
            "description": "The Lambda Package type of the function"
        },
        {
            "name": "lambdaArchitecture",
            "allowedValues": ["x86_64", "arm64"],
            "description": "Lambda architecture identifier"
        },
        {
            "name": "serviceType",
            "type": "string",
            "description": "The name of the AWS service acted on. These values come from the AWS SDK. To find them in the JAVA SDK search for SERVICE_NAME in each service client, or look for serviceId in metadata in the service2.json"
        },
        {
            "name": "requestServiceType",
            "type": "string",
            "description": "Per-request service identifier. Unlike `serviceType` (which describes the originator of the request), this describes the request itself."
        },
        {
            "name": "requestId",
            "type": "string",
            "description": "A generic request ID field. The semantics are contextual based off of other fields (e.g. `requestServiceType`). For example, an event with `requestServiceType: s3` means that the request ID is associated with an S3 API call. Events that cover mutliple API calls should use the request ID of the most recent call."
        },
        {
            "name": "name",
            "type": "string",
            "description": "A generic name metadata"
        },
        {
            "name": "id",
            "type": "string",
            "description": "A generic ID metadata"
        },
        {
            "name": "filenameExt",
            "type": "string",
            "description": "Filename extension (examples: .txt, .yml, .yaml, .asl.yaml, ...), or empty string if the filename does not contain dot (.) between two chars."
        },
        {
            "name": "attempts",
            "type": "int",
            "description": "A generic number of attempts"
        },
        {
            "name": "version",
            "type": "string",
            "description": "A generic version metadata"
        },
        {
            "name": "variant",
            "type": "string",
            "description": "A generic variant metadata"
        },
        {
            "name": "credentialModification",
            "type": "string",
            "allowedValues": ["Add", "Edit", "Delete"],
            "description": "The type of modification performed on the credentials"
        },
        {
            "name": "source",
            "type": "string",
            "description": "The source of the operation"
        },
        {
            "name": "reason",
            "type": "string",
            "description": "The reason for a metric or exception depending on context. It describes a certain theme of errors usually the exception class name eg. FileIOException"
        },
        {
            "name": "errorCode",
            "type": "string",
            "description": "User-friendly error codes describing a failed operation"
        },
        {
            "name": "causedBy",
            "allowedValues": [ "user", "service", "client", "unknown" ],
            "description": "High level categorization indicating the cause of the error"
        },
        {
            "name": "httpStatusCode",
            "type": "string",
            "description": "Describes the HTTP status code for request made. The semantics are contextual based off of other fields (e.g. `requestId`)"
        },
        {
            "name": "url",
            "type": "string",
            "description": "The url associated with a metric"
        },
        {
            "name": "eventBridgeSchema",
            "type": "string",
            "description": "The name of the EventBridge Schema used in the operation"
        },
        {
            "name": "runtime",
            "type": "string",
            "allowedValues": [
                "dotnetcore3.1",
                "dotnetcore2.1",
                "dotnet5.0",
                "dotnet6",
                "dotnet7",
                "nodejs18.x",
                "nodejs16.x",
                "nodejs14.x",
                "nodejs12.x",
                "nodejs10.x",
                "nodejs8.10",
                "ruby2.5",
                "java8",
                "java8.al2",
                "java11",
                "go1.x",
                "python3.9",
                "python3.8",
                "python3.7",
                "python3.6",
                "python2.7"
            ],
            "description": "The lambda runtime"
        },
        {
            "name": "runtimeString",
            "type": "string",
            "description": "A free-text field to record runtimes that may be separate from Lambda runtimes"
        },
        {
            "name": "templateName",
            "type": "string",
            "description": "Generic name of a template"
        },
        {
            "name": "debug",
            "type": "boolean",
            "description": "If the action was run in debug mode or not"
        },
        {
            "name": "httpMethod",
            "type": "string",
            "description": "Any valid HTTP method (GET/HEAD/etc)"
        },
        {
            "name": "oldVersion",
            "type": "string",
            "description": "The old version of something. Useful when updating dependent resources."
        },
        {
            "name": "update",
            "type": "boolean",
            "description": "If the operation was an update or not"
        },
        {
            "name": "schemaLanguage",
            "type": "string",
            "allowedValues": ["Java8", "Python36", "TypeScript3"],
            "description": "Languages targeted by the schemas service"
        },
        {
            "name": "sessionDuration",
            "type": "int",
            "description": "Length of time, in milliseconds, that an authentication session has lived for. Useful for determining how frequently a user has to reauthenticate."
        },
        {
            "name": "language",
            "type": "string",
            "description": "Language used for the project."
        },
        {
            "name": "workflowToken",
            "type": "string",
            "description": "A token used for flow metrics to link calls together"
        },
        {
            "name": "enabled",
            "type": "boolean",
            "description": "True if turned on, false if turned off"
        },
        {
            "name": "credentialSourceId",
            "type": "string",
            "description": "Where credentials are stored or retrieved from",
            "allowedValues": ["sharedCredentials", "sdkStore", "ec2", "ecs", "envVars", "awsId", "iamIdentityCenter", "memory", "other"]
        },
        {
            "name": "credentialType",
            "type": "string",
            "description": "The type of credential that was selected",
            "allowedValues": [
                "staticProfile",
                "staticSessionProfile",
                "credentialProcessProfile",
                "assumeRoleProfile",
                "assumeMfaRoleProfile",
                "assumeSamlRoleProfile",
                "ssoProfile",
                "ecsMetatdata",
                "ec2Metadata",
                "bearerToken",
                "other"
            ]
        },
        {
            "name": "partitionId",
            "type": "string",
            "description": "The ID of the partition that was selected"
        },
        {
            "name": "initialDeploy",
            "type": "boolean",
            "description": "Whether or not the deploy targets a new destination (true) or an existing destination (false)"
        },
        {
            "name": "framework",
            "type": "string",
            "description": "Application framework being used"
        },
        {
            "name": "xrayEnabled",
            "type": "boolean",
            "description": "Whether or not AWS X-Ray is enabled"
        },
        {
            "name": "enhancedHealthEnabled",
            "type": "boolean",
            "description": "Whether or not Elastic Beanstalk enhanced health reporting and monitoring is being used"
        },
        {
            "name": "databaseEngine",
            "type": "string",
            "description": "The database engine used (mysql/postgres/redshift)"
        },
        {
            "name": "databaseCredentials",
            "type": "string",
            "allowedValues": ["IAM", "SecretsManager"],
            "description": "How the database credentials are being retrieved"
        },
        {
            "name": "sqsQueueType",
            "allowedValues": ["standard", "fifo"],
            "description": "The type of an SQS Queue"
        },
        {
            "name": "presigned",
            "type": "boolean",
            "description": "Whether or not it was a presigned request"
        },
        {
            "name": "platform",
            "type": "string",
            "description": "Language-specific identification. Examples: v4.6.1, netcoreapp3.1, nodejs12.x. Not AWS Lambda specific. Allows for additional details when other fields are opaque, such as the Lambda runtime value 'provided'."
        },
        {
            "name": "insightsDialogOpenSource",
            "allowedValues": ["explorer", "resultsWindow", "logGroup"],
            "description": "Dialog open trigger source location"
        },
        {
            "name": "insightsQueryTimeType",
            "allowedValues": ["relative", "absolute"],
            "description": "User-selected time range type while starting an insights query"
        },
        {
            "name": "insightsQueryStringType",
            "allowedValues": ["insights", "searchTerm"],
            "description": "User-specified search string type while starting an insights query"
        },
        {
            "name": "ec2ConnectionType",
            "allowedValues": ["remoteDesktop", "ssh", "scp"],
            "description": "Ways to connect to an EC2 Instance"
        },
        {
            "name": "ec2InstanceState",
            "allowedValues": ["start", "stop", "reboot", "terminate"],
            "description": "Actions that can affect an EC2 Instance state"
        },
        {
            "name": "ecsLaunchType",
            "allowedValues": ["ec2", "fargate"],
            "description": "Infrastructure type used by ECS tasks and services"
        },
        {
            "name": "ecsExecuteCommandType",
            "allowedValues": ["command", "shell"],
            "description": "Type of execution selected while running the execute command"
        },
        {
            "name": "ecrDeploySource",
            "allowedValues": ["dockerfile", "tag"],
            "description": "The source content specified in the ECR deployment request"
        },
        {
            "name": "dynamoDbFetchType",
            "allowedValues": ["scan", "query"],
            "description": "The type of fetch being performed"
        },
        {
            "name": "dynamoDbIndexType",
            "allowedValues": ["primary", "localSecondary", "globalSecondary"],
            "description": "The type of index being hit for the query/scan operation"
        },
        {
            "name": "dynamoDbTarget",
            "allowedValues": ["table", "tableProperties", "tableStream"],
            "description": "The type of DynamoDB entity referenced by a metric or operation"
        },
        {
            "name": "resourceType",
            "type": "string",
            "description": "The dynamic resource type being interacted with"
        },
        {
            "name": "dynamicResourceOperation",
            "allowedValues": ["Create", "Update", "Delete"],
            "description": "The dynamic resource operation being executed"
        },
        {
            "name": "experimentState",
            "type": "string",
            "allowedValues": ["activated", "deactivated"],
            "description": "The experiment action taken action taken"
        },
        {
            "name": "experimentId",
            "type": "string",
            "description": "The id of the experiment being activated or deactivated"
        },
        {
            "name": "settingId",
            "type": "string",
            "description": "The id of the setting being changed. Consistent namespace should be used for the id, e.g. codewhisperer_autoSuggestionActivation"
        },
        {
            "name": "settingState",
            "type": "string",
            "description": "The state of the setting being changed to. This should not be recorded for free-form settings like file-system paths. Instead, stick to things like flags, numbers, and enums."
        },
        {
            "name": "toolId",
            "type": "string",
            "description": "The tool being installed",
            "allowedValues": ["session-manager-plugin", "dotnet-lambda-deploy", "dotnet-deploy-cli", "aws-cli", "sam-cli"]
        },
        {
            "name": "elementId",
            "type": "string",
            "description": "An identifier associated with a UI element"
        },
        {
            "name": "successCount",
            "type": "int",
            "description": "The number of successful operations"
        },
        {
            "name": "failedCount",
            "type": "int",
            "description": "The number of failed operations"
        },
        {
            "name": "codewhispererAcceptedTokens",
            "type": "int",
            "description": "The metrics accepted on suggested CodeWhisperer code"
        },
        {
            "name": "codewhispererAutomatedTriggerType",
            "type": "string",
            "description": "The type of the Automated trigger to send request to CodeWhisperer service",
            "allowedValues": ["KeyStrokeCount", "SpecialCharacters", "Enter", "IntelliSenseAcceptance", "IdleTime", "Classifier"]
        },

        {
            "name": "codewhispererCodeScanJobId",
            "type": "string",
            "description": "The ID of the security scan job"
        },
        {
            "name": "codewhispererCodeScanLines",
            "type": "int",
            "description": "How many lines of code being sent for security scan"
        },
        {
            "name": "codewhispererCodeScanProjectBytes",
            "type": "double",
            "description": "The total size in bytes of customer project to perform security scan on"
        },
        {
            "name": "codewhispererCodeScanSrcPayloadBytes",
            "type": "int",
            "description": "The uncompressed payload size in bytes of the source files in customer project context sent for security scan"
        },
        {
            "name": "codewhispererCodeScanBuildPayloadBytes",
            "type": "int",
            "description": "The uncompressed payload size in bytes of the build files in customer project context sent for security scan"
        },
        {
            "name": "codewhispererCodeScanSrcZipFileBytes",
            "type": "int",
            "description": "The compressed payload size of source files in bytes of customer project context sent for security scan"
        },
        {
            "name": "codewhispererCodeScanBuildZipFileBytes",
            "type": "int",
            "description": "The compressed payload size of built jars in bytes of customer project context sent for security scan. This is only applicable for Java project"
        },
        {
            "name": "contextTruncationDuration",
            "type": "int",
            "description": "Time taken for context truncation in milliseconds"
        },
        {
            "name": "artifactsUploadDuration",
            "type": "int",
            "description": "Time taken to fetch the upload URL and upload the artifacts in milliseconds"
        },
        {
            "name": "codeScanServiceInvocationsDuration",
            "type": "int",
            "description": "Time taken to invoke code scan service APIs in milliseconds"
        },
        {
            "name": "codewhispererCodeScanTotalIssues",
            "type": "int",
            "description": "The number of security issues been detected"
        },
        {
            "name": "codewhispererCodeScanIssuesWithFixes",
            "type": "int",
            "description": "The number of security issues detected with suggested fixes"
        },
        {
            "name": "codewhispererCompletionType",
            "type": "string",
            "description": "Completion Type of the inference results returned from CodeWhisperer model layer",
            "allowedValues": ["Line", "Block"]
        },
        {
            "name": "codewhispererCursorOffset",
            "type": "int",
            "description": "cursor location offset in the editor when invoking CodeWhisperer for recommendation"
        },
        {
            "name": "codewhispererCustomizationArn",
            "type": "string",
            "description": "The currently selected customization arn(None if using the base model)"
        },
        {
            "name": "codewhispererFeatureEvaluations",
            "type": "string",
            "description": "Feature assignments for a particular user"
        },
        {
            "name": "codewhispererLanguage",
            "type": "string",
            "description": "Programming language of the CodeWhisperer recommendation",
            "allowedValues": ["java", "python", "javascript", "plaintext", "jsx", "typescript", "tsx", "csharp",
                "c", "cpp", "go", "kotlin", "php", "ruby", "rust", "scala", "shell", "sql", "json", "jsonc", "yaml", "yml", "hcl", "tf"]
        },
        {
            "name": "codewhispererGettingStartedTask",
            "type": "string",
            "description": "The task type selected by the user in getting started page",
            "allowedValues": [
                "autoTrigger",
                "manualTrigger",
                "commentAsPrompt",
                "unitTest",
                "navigation"
            ]
        },
        {
            "name": "codewhispererLastSuggestionIndex",
            "type": "int",
            "description": "The last index of recommendation from a particular response"
        },
        {
            "name": "codewhispererLineNumber",
            "type": "int",
            "description": "The line number of the cursor when the event happens"
        },
        {
            "name": "codewhispererModificationPercentage",
            "type": "double",
            "description": "The percentage of user modifications on the suggested code"
        },
        {
            "name": "codewhispererPaginationProgress",
            "type": "int",
            "description": "The number of recommendations received so far when user makes a decision"
        },
        {
            "name": "codewhispererPercentage",
            "type": "int",
            "description": "The percentage of acceptance on suggested CodeWhisperer code on the overall code"
        },
        {
            "name": "codewhispererRequestId",
            "type": "string",
            "description": "The ID of the request to CodeWhisperer service"
        },
        {
            "name": "codewhispererRuntime",
            "type": "string",
            "allowedValues": ["java8", "java11", "java16", "python2", "python3", "javascript", "unknown"],
            "description": "the pre-defined set of values for runtime version of the language of CodeWhisperer recommendation"
        },
        {
            "name": "codewhispererRuntimeSource",
            "type": "string",
            "description": "the original (free-text) of the runtime version of the language of CodeWhisperer recommendation"
        },
        {
            "name": "codewhispererSessionId",
            "type": "string",
            "description": "The unique identifier for a CodeWhisperer session(which can contain multiple requests)"
        },
        {
            "name": "codewhispererSuggestionIndex",
            "type": "int",
            "description": "The index for each suggestion, respectively, in the list of suggestions returned from service invocation"
        },
        {
            "name": "codewhispererSuggestionReferences",
            "type": "string",
            "description": "The list of unique license names for a particular suggestion"
        },
        {
            "name": "codewhispererSuggestionReferenceCount",
            "type": "int",
            "description": "Number of references the particular suggestion is referenced with."
        },
        {
            "name": "codewhispererSuggestionImportCount",
            "type": "int",
            "description": "The number of import statements included with recommendation."
        },
        {
            "name": "codewhispererSupplementalContextTimeout",
            "type": "boolean",
            "description": "If the supplemental context fetching timeout or not"
        },
        {
            "name": "codewhispererSupplementalContextIsUtg",
            "type": "boolean",
            "description": "If the supplemental context is for test file(UTG) or src file"
        },
        {
            "name": "codewhispererSupplementalContextLatency",
            "type": "double",
            "description": "Latency to obtain supplemental context"
        },
        {
            "name": "codewhispererSupplementalContextLength",
            "type": "int",
            "description": "Length of codewhisperer supplemental context extracted from files"
        },
        {
            "name": "codewhispererSupplementalContextStrategyId",
            "type": "string",
            "description": "Name tag or identifier for supplemental context fetching strategy being used for us to easier analyze corresponding acceptance rate"
        },
        {
            "name": "codewhispererImportRecommendationEnabled",
            "type": "boolean",
            "description": "Whether Import Recommendation is enabled."
        },
        {
            "name": "codewhispererSuggestionState",
            "type": "string",
            "description": "User decision of each of the suggestion returned from CodeWhisperer",
            "allowedValues": ["Accept", "Reject", "Discard", "Ignore", "Filter", "Unseen", "Empty"]
        },
        {
            "name": "codewhispererTotalTokens",
            "type": "int",
            "description": "The metrics generated by the user and acceptance of suggested CodeWhisperer code in the language CodeWhisperer supports."
        },
        {
            "name": "codewhispererTriggerType",
            "type": "string",
            "description": "The type of the user trigger to send request to CodeWhisperer service",
            "allowedValues": ["OnDemand", "AutoTrigger"]
        },
        {
            "name": "codewhispererFirstCompletionLatency",
            "type": "double",
            "description": "The time it takes for the response to be received after the plugin makes a first GenerateCompletions API call."
        },
        {
            "name": "codewhispererEndToEndLatency",
            "type": "double",
            "description": "The time it takes for the first completion to be shown in the IDE after the user performs the CW trigger action."
        },
        {
            "name": "codewhispererAllCompletionsLatency",
            "type": "double",
            "description": "The time it takes for the last GenerateCompletions response to be received after plugin makes a first call to GenerateCompletions API."
        },
        {
            "name": "codewhispererPostprocessingLatency",
            "type": "double",
            "description": "The time it takes for the first completions to be displayed in the IDE after the plugin receives the initial Completions object."
        },
        {
            "name": "codewhispererPreprocessingLatency",
            "type": "double",
            "description": "The time it takes for the plugin to make the first GenerateCompletions API call after the user performs the CW trigger action."
        },
        {
            "name": "codewhispererCredentialFetchingLatency",
            "type": "double",
            "description": "The time it takes to get the Sono/SSO credential for the invocation."
        },

        {
            "name": "codewhispererIsPartialAcceptance",
            "type": "boolean",
            "description": "If user has accepted only part of the recommendation or not."
        },
        {
            "name": "codewhispererPartialAcceptanceCount",
            "type": "int",
            "description": "The number of times the user accept part of the recommendations."
        },
        {
            "name": "codewhispererCharactersAccepted",
            "type": "int",
            "description": "The number of characters user has accepted through partial acceptance."
        },
        {
            "name": "codewhispererCharactersRecommended",
            "type": "int",
            "description": "The number of characters originally recommended to the user in partial acceptance scenario."
        },
        {
            "name": "codewhispererFirstRequestId",
            "type": "string",
            "description": "The request id of the first request in a paginated session."
        },
        {
            "name": "codewhispererSuggestionCount",
            "type": "int",
            "description": "The total number of code suggestions in a paginated session."
        },
        {
            "name": "codewhispererTotalShownTime",
            "type": "double",
            "description": "The time that recommendations are shown to the user in a paginated session."
        },
        {
            "name": "codewhispererTriggerCharacter",
            "type": "string",
            "description": "The character that triggered recommendation for special characters trigger."
        },
        {
            "name": "codewhispererTypeaheadLength",
            "type": "int",
            "description": "The length of additional characters inputted by the user since the invocation. "
        },
        {
            "name": "codewhispererTimeSinceLastDocumentChange",
            "type": "double",
            "description": "The time from last document change to the current document change. "
        },
        {
            "name": "codewhispererTimeSinceLastUserDecision",
            "type": "double",
            "description": "The time from last user decision to current invocation. "
        },
        {
            "name": "codewhispererTimeToFirstRecommendation",
            "type": "double",
            "description": "The time from user trigger to the first recommendation is received. "
        },
        {
            "name": "codewhispererPreviousSuggestionState",
            "type": "string",
            "description": "The aggregated user decision from previous trigger. ",
            "allowedValues": [
                "Accept",
                "Reject",
                "Discard",
                "Empty"
            ]
        },
        {
            "name": "codewhispererClassifierResult",
            "type": "double",
            "description": "The result from Classifier trigger."
        },
        {
            "name": "codewhispererClassifierThreshold",
            "type": "double",
            "description": "The threshold of Classifier trigger."
        },
        {
            "name": "codewhispererUserGroup",
            "type": "string",
            "description": "The user group identifier we assign to the customer and it should be unique identifier across different IDE platforms, i.e. Classifier, CrossFile etc."
        },
        {
            "name": "syncedResources",
            "type": "string",
            "description": "Describes which parts of an application (that we know of) were synced to the cloud. \"Code\" resources follow the SAM spec: https://docs.aws.amazon.com/serverless-application-model/latest/developerguide/sam-cli-command-reference-sam-sync.html",
            "allowedValues": ["AllResources", "CodeOnly"]
        },
        {
            "name": "credentialStartUrl",
            "type": "string",
            "description": "The start URL of current SSO connection"
        },
        {
            "name": "codecatalyst_createDevEnvironmentRepoType",
            "type": "string",
            "description": "Type of Git repository provided to the Amazon CodeCatalyst dev environment create wizard",
            "allowedValues": [
                "linked",
                "unlinked",
                "none"
            ]
        },
        {
            "name": "codecatalyst_updateDevEnvironmentLocationType",
            "type": "string",
            "description": "Locality of the Amazon CodeCatalyst update dev environment request (i.e., from the thin client or the local IDE instance)",
            "allowedValues": [
                "remote",
                "local"
            ]
        },
        {
            "name": "userId",
            "type": "string",
            "description": "Opaque AWS Builder ID identifier"
        },
        {
            "name": "codecatalyst_devEnvironmentWorkflowError",
            "type": "string",
            "description": "Workflow error name"
        },
        {
            "name": "codecatalyst_devEnvironmentWorkflowStep",
            "type": "string",
            "description": "Workflow step name"
        },
        {
            "name": "authConnectionsCount",
            "type": "int",
            "description": "Current number of authentication connections the user has"
        },
        {
            "name": "newAuthConnectionsCount",
            "type": "int",
            "description": "Number of new authentication connections the user has"
        },
        {
            "name": "featureId",
            "type": "string",
            "description": "The id of the feature the user is interacting in.",
            "allowedValues": [
                "awsExplorer",
                "codewhisperer",
                "codecatalyst"
            ]
        },
        {
            "name": "enabledAuthConnections",
            "type": "string",
            "description": "Comma delimited list of enabled auth connections"
        },
        {
            "name": "newEnabledAuthConnections",
            "type": "string",
            "description": "Comma delimited list of NEW enabled auth connections"
        },
        {
            "name": "isAggregated",
            "type": "boolean",
            "description": "Whether this was an individual point or an aggregation of points."
        },
        {
            "name": "invalidInputFields",
            "type": "string",
            "description": "Comma delimited list of input fields that user has invalid inputs typed. e.g. 'profileName,accessKey,startUrl'"
        },
        {
            "name": "userChoice",
            "type": "string",
            "description": "User selection from a predefined menu (not user-provided input)" 
        },
        {
            "name": "amazonqConversationId",
            "type": "string",
            "description": "Uniquely identifies a message with which the user interacts."
        },
        {
            "name": "amazonqGenerateApproachIteration",
            "type": "double",
            "description": "Order of approach iteration. For initial code changes it is 0"
        },
        {
            "name": "amazonqGenerateApproachLatency",
            "type": "double",
            "description": "The time it takes to generate approach response"
        },
        {
            "name": "amazonqGenerateCodeIteration",
            "type": "double",
            "description": "Order of code generation iteration. For initial code changes it is 0"
        },
        {
            "name": "amazonqGenerateCodeResponseLatency",
            "type": "double",
            "description": "The time it takes to generate code generation response"
        },
        {
            "name": "amazonqCodeGenerationResult",
            "type": "string",
            "description": "Captures if code generation result is Complete, Failed,etc"
        },
        {
            "name": "amazonqNumberOfFilesGenerated",
            "type": "double",
            "description": "Captures the number of files generated as a part of code generation iteration"
        },
        {
            "name": "amazonqRepositorySize",
            "type": "double",
            "description": "Captures  size of the source code"
        },
        {
            "name": "amazonqNumberOfReferences",
            "type": "double",
            "description": "Captures the number of references"
        },
        {
            "name": "amazonqEndOfTheConversationLatency",
            "type": "double",
            "description": "Total time from start to end"
        },
        {
            "name": "codeTransformJavaSourceVersionsAllowed",
            "type": "string",
            "description": "Allowed Java versions to transform from.",
            "allowedValues": [
                "JDK_1_8",
                "JDK_11"
            ]
        },
        {
            "name": "codeTransformJavaTargetVersionsAllowed",
            "type": "string",
            "description": "Allowed Java versions to transform to.",
            "allowedValues": [
                "JDK_17"
            ]
        },
        {
            "name": "codeTransformJobId",
            "type": "string",
            "description": "A string id for the current job running in the background."
        },
        {
            "name": "codeTransformStatus",
            "type": "string",
            "description": "A string to identify the API status."
        },
        {
            "name": "codeTransformRequestId",
            "type": "string",
            "description": "A string id for the api request that was fired."
        },
        {
            "name": "codeTransformTotalByteSize",
            "type": "int",
            "description": "An integer representing the byte size of the upload or download."
        },
        {
            "name": "codeTransformUploadId",
            "type": "string",
            "description": "A unique upload id representing the uploadId to s3 bucket."
        },
        {
            "name": "codeTransformResultStatusMessage",
            "type": "string",
            "description": "A general string field to represent the result of the project"
        },
        {
            "name": "codeTransformRuntimeError",
            "type": "string",
            "description": "A general string field to represent runtime errors in the project."
        },
        {
            "name": "codeTransformApiErrorMessage",
            "type": "string",
            "description": "A general string field to represent API specific errors in the project."
        },
        {
            "name": "codeTransformSessionId",
            "type": "string",
            "description": "A general string field to represent the IDE session from when users start the modernization process."
        },
        {
            "name": "codeTransformRunTimeLatency",
            "type": "int",
            "description": "A millisecond value of the total runtime latency."
        },
        {
            "name": "codeTransformStartSrcComponents",
            "type": "string",
            "description": "Names of components that can start a transform job.",
            "allowedValues": [
                "devToolsStartButton",
                "bottomPanelSideNavButton"
            ]
        },
        {
            "name": "codeTransformCancelSrcComponents",
            "type": "string",
            "description": "Names of components that can cancel a transform job.",
            "allowedValues": [
                "apiError",
                "loadingPanelStopButton",
                "devToolsStopButton",
                "bottomPanelSideNavButton"
            ]
        },
        {
            "name": "codeTransformVCSViewerSrcComponents",
            "type": "string",
            "description": "Names of components that can initiate the patch viewer.",
            "allowedValues": [
                "toastNotification",
                "treeView",
                "treeViewHeader"
            ]
        },
        {
            "name": "codeTransformPatchViewerCancelSrcComponents",
            "type": "string",
            "description": "Names of components that can cancel the patch viewer.",
            "allowedValues": [
                "apiError",
                "cancelButton"
            ]
        },
        {
            "name": "codeTransformApiNames",
            "type": "string",
            "description": "Names of allowed api calls in code transform service.",
            "allowedValues": [
                "StartTransformation",
                "StopTransformation",
                "GetTransformation",
                "GetTransformationPlan",
                "UploadZip",
                "CreateUploadUrl",
                "ExportResultArchive"
            ]
        },
        {
            "name": "codeTransformPreValidationError",
            "type": "string",
            "description": "Names of the pre-validation errors that can occur in the project",
            "allowedValues": [
                "NoPom",
                "NoJavaProject",
                "MixedLanguages",
                "UnsupportedJavaVersion",
                "NonMavenProject",
                "EmptyProject",
                "NonSsoLogin",
                "RemoteRunProject"
            ]
        },
        {
            "name": "codeTransformMavenBuildCommand",
            "type": "string",
            "description": "Type of maven command",
            "allowedValues": [
                "mvn",
                "mvnw"
            ]
        }
    ],
    "metrics": [
        {
            "name": "apigateway_copyUrl",
            "description": "Copying an API Gateway remote URL",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "apigateway_invokeLocal",
            "description": "Invoking one simulated API Gateway call using the SAM cli",
            "metadata": [
                { "type": "runtime", "required": false },
                { "type": "httpMethod", "required": false },
                { "type": "result" },
                { "type": "debug" },
                { "type": "lambdaArchitecture", "required": false }
            ]
        },
        {
            "name": "apigateway_invokeRemote",
            "description": "Calling a remote API Gateway",
            "metadata": [{ "type": "result" }, { "type": "httpMethod", "required": false }]
        },
        {
            "name": "apigateway_startLocalServer",
            "description": "Called when starting a local API Gateway server simulator with SAM. Only called when starting it for long running testing, not for single invokes",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "apprunner_openServiceUrl",
            "description": "Open the service URL in a browser"
        },
        {
            "name": "apprunner_copyServiceUrl",
            "description": "Copy the service URL"
        },
        {
            "name": "apprunner_createService",
            "description": "Create an App Runner service",
            "metadata": [
                { "type": "result" },
                { "type": "appRunnerServiceSource" },
                { "type": "reason", "required": false }
            ]
        },
        {
            "name": "apprunner_pauseService",
            "description": "Pause a running App Runner service",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "apprunner_resumeService",
            "description": "Resume a paused App Runner service",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "apprunner_deleteService",
            "description": "Delete an App Runner service",
            "metadata": [
                { "type": "result" },
                { "type": "appRunnerServiceStatus", "required": false }
            ]
        },
        {
            "name": "apprunner_startDeployment",
            "description": "Start a new deployment for an App Runner service",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "apprunner_viewApplicationLogs",
            "description": "View the App Runner application logs (the logs for your running service)"
        },
        {
            "name": "apprunner_viewServiceLogs",
            "description": "View the App Runner service logs (the logs produced by App Runner)"
        },
        {
            "name": "auth_addConnection",
            "description": "Captures the result of adding a new connection in the 'Add New Connection' workflow",
            "metadata": [
                { "type": "source"},
                { "type": "featureId"},
                { "type": "credentialSourceId"},
                { "type": "isAggregated"},
                { "type": "result"},
                { "type": "attempts", "required": false},
                { "type": "invalidInputFields", "required": false},
                { "type": "reason", "required": false}
            ]
        },
        {
            "name": "auth_addedConnections",
            "description": "The diff/change in Auth connections",
            "metadata": [
                { "type": "source"},
                { "type": "authConnectionsCount"},
                { "type": "newAuthConnectionsCount"},
                { "type": "enabledAuthConnections"},
                { "type": "newEnabledAuthConnections"},
                { "type": "attempts"},
                { "type": "result"},
                { "type": "reason", "required": false}
            ]
        },
        {
            "name": "auth_switchRoles",
            "description": "Called when user clicks yes or no to switch role upon adding new connection",
            "metadata": [
                { "type": "authConnectionsCount"},
                { "type": "userChoice"}
            ]
        },
        {
            "name": "aws_copyArn",
            "description": "Copy the ARN of an AWS resource",
            "metadata": [{ "type": "serviceType" }]
        },
        {
            "name": "aws_deleteResource",
            "description": "Delete an AWS resource",
            "metadata": [{ "type": "serviceType" }, { "type": "result" }]
        },
        {
            "name": "aws_setCredentials",
            "description": "Select a credentials profile",
            "metadata": [
                { "type": "credentialType", "required": false },
                { "type": "credentialSourceId", "required": false }
            ]
        },
        {
            "name": "aws_setRegion",
            "description": "A region change occurred",
            "metadata": []
        },
        {
            "name": "aws_setPartition",
            "description": "A partition change occurred",
            "metadata": [{ "type": "partitionId" }]
        },
        {
            "name": "aws_openCredentials",
            "description": "Open the credentials file",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "aws_openUrl",
            "description": "Opens a url",
            "metadata": [
                { "type": "result" },
                { "type": "url", "required": false },
                { "type": "source", "required": false }
            ]
        },
        {
            "name": "aws_saveCredentials",
            "description": "Save credentials"
        },
        {
            "name": "aws_modifyCredentials",
            "description": "Modify credentials (e.g. Add, Edit, Delete)",
            "metadata": [
                { "type": "result" },
                { "type": "credentialModification" },
                { "type": "source" },
                { "type": "serviceType", "required": false }
            ]
        },
        {
            "name": "aws_loadCredentials",
            "description": "Load credentials from a credential source",
            "unit": "Count",
            "metadata": [{ "type": "credentialSourceId" }],
            "passive": true
        },
        {
            "name": "aws_createCredentials",
            "description": "Create a new credentials file"
        },
        {
            "name": "aws_injectCredentials",
            "description": "Inject selected AWS credentials into a third-party run (e.g. RunConfiguration)",
            "metadata": [{ "type": "result" }, { "type": "runtimeString", "required": false }]
        },
        {
            "name": "aws_validateCredentials",
            "description": "Validate credentials when selecting new credentials",
            "metadata": [
                { "type": "result" }, 
                { "type": "credentialType", "required": false }, 
                { "type": "credentialSourceId", "required": false }
            ],
            "passive": true
        },
        {
            "name": "aws_refreshCredentials",
            "description": "Emitted when credentials are automatically refreshed by the AWS SDK or Toolkit",
            "passive": true,
            "metadata": [
                { "type": "result" },
                { "type": "reason", "required": false },
                { "type": "credentialType", "required": false },
                { "type": "credentialSourceId", "required": false },
                { "type": "sessionDuration", "required": false }
            ]
        },
        {
            "name": "aws_loginWithBrowser",
            "description": "Called when a connection requires login using the browser",
            "metadata": [
                { "type": "result" }, 
                { "type": "credentialType", "required": false }, 
                { "type": "credentialSourceId", "required": false }
            ]
        },
        {
            "name": "aws_help",
            "description": "Open docs for the extension",
            "metadata": [{ "type": "name", "required": false }]
        },
        {
            "name": "aws_helpQuickstart",
            "description": "Open the quickstart guide",
            "metadata": [{ "type": "result" }],
            "passive": true
        },
        {
            "name": "aws_showExtensionSource",
            "description": "Open the repo for the extension"
        },
        {
            "name": "aws_refreshExplorer",
            "description": "Refresh the AWS explorer window"
        },
        {
            "name": "aws_expandExplorerNode",
            "description": "Expand a service root node in the AWS explorer window",
            "metadata": [{ "type": "serviceType" }]
        },
        {
            "name": "aws_reportPluginIssue",
            "description": "Report an issue with the plugin"
        },
        {
            "name": "beanstalk_deploy",
            "description": "Called when deploying an application to Elastic Beanstalk",
            "metadata": [
                { "type": "result" },
                { "type": "initialDeploy" },
                { "type": "duration", "required": false },
                { "type": "name", "required": false },
                { "type": "framework", "required": false },
                { "type": "xrayEnabled", "required": false },
                { "type": "enhancedHealthEnabled", "required": false },
                { "type": "serviceType", "required": false },
                { "type": "source" , "required": false}
            ]
        },
        {
            "name": "beanstalk_publishWizard",
            "description": "Called when user completes the Elastic Beanstalk publish wizard",
            "metadata": [
                { "type": "result" },
                { "type": "duration", "required": false },
                { "type": "serviceType", "required": false },
                { "type": "source" , "required": false}
            ]
        },
        {
            "name": "beanstalk_openApplication",
            "description": "Open a window to view the status of the Beanstalk Application",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "beanstalk_openEnvironment",
            "description": "Open a window to view the status of the Beanstalk Environment",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "beanstalk_deleteApplication",
            "description": "Called when user deletes a Beanstalk application",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "beanstalk_deleteEnvironment",
            "description": "Called when user deletes a Beanstalk environment",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "beanstalk_restartApplication",
            "description": "Restart application server for a Beanstalk environment",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "beanstalk_rebuildEnvironment",
            "description": "Rebuild a Beanstalk environment",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "beanstalk_editEnvironment",
            "description": "Edit configuration of a Beanstalk environment",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudfront_openDistribution",
            "description": "Open a window to view the status of the CloudFront Distribution",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudfront_openStreamingDistribution",
            "description": "Open a window to view the status of the CloudFront Streaming Distribution",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudfront_openInvalidationRequest",
            "description": "Open a window to view the Cloudfront Invalidation requests",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudfront_deleteDistribution",
            "description": "Called when user deletes a CloudFront Distribution",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudfront_deleteStreamingDistribution",
            "description": "Called when user deletes a CloudFront Streaming Distribution",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudfront_createDistribution",
            "description": "Create a CloudFront Distribution",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudfront_createStreamingDistribution",
            "description": "Create a CloudFront Streaming Distribution",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudwatchlogs_copyArn",
            "description": "Copy the ARN of a CloudWatch Logs entity",
            "metadata": [
                { "type": "result" },
                { "type": "cloudWatchResourceType" }
            ]
        },
        {
            "name": "cloudwatchlogs_open",
            "description": "Open a CloudWatch Logs entity. ServiceType and source indicate where the request came from (example: while viewing an ECS container)",
            "metadata": [
                { "type": "result" },
                { "type": "cloudWatchResourceType" },
                { "type": "cloudWatchLogsPresentation", "required": false },
                { "type": "serviceType", "required": false },
                { "type": "hasTextFilter", "required": false },
                { "type": "hasTimeFilter", "required": false },
                { "type": "source" }
            ]
        },
        {
            "name": "cloudwatchlogs_openGroup",
            "description": "Open the CloudWatch Logs group window. ServiceType indicates that it was opened from a different service (like directly from an ECS container) (Deprecated - use cloudwatchlogs_open)",
            "metadata": [{ "type": "result" }, { "type": "serviceType", "required": false }]
        },
        {
            "name": "cloudwatchlogs_openStream",
            "description": "Open a CloudWatch Logs stream in the window. ServiceType indicates that it was opened from a different service (like directly from an ECS container) (Deprecated - use cloudwatchlogs_open)",
            "metadata": [{ "type": "result" }, { "type": "serviceType", "required": false }]
        },
        {
            "name": "cloudwatchlogs_delete",
            "description": "Delete a CloudWatch Logs entity.",
            "metadata": [
                { "type": "result" },
                { "type": "cloudWatchResourceType" }
            ]
        },
        {
            "name": "cloudwatchlogs_download",
            "unit": "Bytes",
            "description": "Download a CloudWatch Logs entity. Value indicates the final size of the formatted stream in bytes.",
            "metadata": [
                { "type": "result" },
                { "type": "cloudWatchResourceType" }
            ]
        },
        {
            "name": "cloudwatchlogs_downloadStreamToFile",
            "unit": "Bytes",
            "description": "Download a stream to a file on disk. Value indicates the final size of the formatted stream. (Deprecated - use cloudwatchlogs_download)",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudwatchlogs_openStreamInEditor",
            "description": "Download a stream to memory then open in an editor.",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudwatchlogs_viewCurrentMessagesInEditor",
            "description": "Copy the currently open (possibly filtered) messages to an editor",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudwatchlogs_wrapEvents",
            "description": "Word wrap events off/on",
            "metadata": [{ "type": "enabled" }]
        },
        {
            "name": "cloudwatchlogs_tailStream",
            "description": "Tail stream off/on",
            "metadata": [{ "type": "enabled" }]
        },
        {
            "name": "cloudwatchlogs_refresh",
            "description": "Refresh a CloudWatch Logs entity",
            "metadata": [{ "type": "cloudWatchResourceType" }]
        },
        {
            "name": "cloudwatchlogs_refreshGroup",
            "description": "Refresh group is pressed (Deprecated, use cloudwatchlogs_refresh)"
        },
        {
            "name": "cloudwatchlogs_refreshStream",
            "description": "Refresh stream is pressed (Deprecated, use cloudwatchlogs_refresh)"
        },
        {
            "name": "cloudwatchlogs_filter",
            "description": "Filters a CloudWatch Logs entity. (Essentially a subset of cloudwatchlogs_open)",
            "metadata": [
                { "type": "result" },
                { "type": "cloudWatchResourceType" },
                { "type": "source", "required": false },
                { "type": "hasTextFilter", "required": false },
                { "type": "hasTimeFilter", "required": false }
            ]
        },
        {
            "name": "cloudwatchlogs_searchStream",
            "description": "Called when a stream is searched",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudwatchlogs_searchGroup",
            "description": "Called when a group is searched",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudwatchlogs_showEventsAround",
            "description": "Show event around a time period in ms specified by Value",
            "unit": "Milliseconds",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudformation_createProject",
            "description": "Called when creating a CloudFormation project",
            "metadata": [
                { "type": "result" },
                { "type": "templateName" }
            ]
        },
        {
            "name": "cloudformation_deploy",
            "description": "Called when deploying a CloudFormation template",
            "metadata": [
                { "type": "result" }, 
                { "type": "initialDeploy" },
                { "type": "duration", "required": false },
                { "type": "serviceType", "required": false },
                { "type": "source" , "required": false}
            ]
        },
        {
            "name": "cloudformation_publishWizard",
            "description": "Called when user completes the CloudFormation template publish wizard",
            "metadata": [
                { "type": "result" },
                { "type": "duration", "required": false },
                { "type": "serviceType", "required": false },
                { "type": "source" , "required": false}
            ]
        },
        {
            "name": "cloudformation_open",
            "description": "Open a CloudFormation stack in the stack viewer",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "codecommit_cloneRepo",
            "description": "A repo is cloned from CodeCommit",
            "metadata": [
                { "type": "result" },
                { "type": "reason", "required": false }
            ]
        },
        {
            "name": "codecommit_createRepo",
            "description": "A repo is created in CodeCommit",
            "metadata": [
                { "type": "result" },
                { "type": "reason", "required": false }
            ]
        },
        {
            "name": "codecommit_setCredentials",
            "description": "A connection is established to CodeCommit to perform actions on repos",
            "metadata": [
                { "type": "result" },
                { "type": "credentialType", "required": false }
            ],
            "passive": true
        },
        {
            "name": "dynamodb_createTable",
            "description": "Create a DynamoDB table",
            "metadata": [
                { "type": "result" },
                { "type": "reason", "required": false }
            ]
        },
        {
            "name": "dynamodb_deleteTable",
            "description": "Delete a DynamoDB table",
            "metadata": [
                { "type": "result" },
                { "type": "reason", "required": false }
            ]
        },
        {
            "name": "dynamodb_edit",
            "description": "Modify a DynamoDB entity",
            "metadata": [
                { "type": "result" },
                { "type": "dynamoDbTarget" },
                { "type": "reason", "required": false }
            ]
        },
        {
            "name": "dynamodb_fetchRecords",
            "description": "Fetch records from a DynamoDB table in the table browser",
            "metadata": [
                { "type": "result" },
                { "type": "dynamoDbFetchType" },
                { "type": "dynamoDbIndexType", "required": false }
            ]
        },
        {
            "name": "dynamodb_openTable",
            "description": "Open a DynamoDB table in the table browser",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "dynamodb_view",
            "description": "View a DynamoDB entity",
            "metadata": [
                { "type": "result" },
                { "type": "dynamoDbTarget" },
                { "type": "reason", "required": false }
            ]
        },
        {
            "name": "ec2_changeState",
            "description": "Change the state of an EC2 Instance",
            "metadata": [
                { "type": "result" }, 
                { "type": "ec2InstanceState" }
            ]
        },
        {
            "name": "ec2_clearPrivateKey",
            "unit": "Count",
            "description": "Remove the private key of an EC2 Key Pair from internal storage",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ec2_connectToInstance",
            "description": "Perform a connection to an EC2 Instance",
            "metadata": [
                { "type": "result" }, 
                { "type": "ec2ConnectionType" }
            ]
        },
        {
            "name": "ec2_copyAmiToRegion",
            "description": "Copy AMI image to another region",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ec2_createAmi",
            "description": "Create an image from an EC2 Instance",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ec2_createElasticIp",
            "description": "Create (allocate) an Elastic IP address",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ec2_createKeyPair",
            "description": "Create an EC2 Key Pair",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ec2_createSecurityGroup",
            "description": "Create an EC2 security group",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ec2_createSnapshot",
            "description": "Create an EC2 volume snapshot",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ec2_createVolume",
            "description": "Create an EC2 volume",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ec2_deleteAmi",
            "unit": "Count",
            "description": "Delete (de-register) an AMI image",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ec2_deleteElasticIp",
            "description": "Delete (release) an Elastic IP address",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ec2_deleteKeyPair",
            "unit": "Count",
            "description": "Delete an EC2 Key Pair",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ec2_deleteSecurityGroup",
            "unit": "Count",
            "description": "Delete an EC2 security group",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ec2_deleteSnapshot",
            "unit": "Count",
            "description": "Delete an EC2 Volume Snapshot",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ec2_deleteVolume",
            "unit": "Count",
            "description": "Delete an EC2 Volume",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ec2_editAmiPermission",
            "description": "Edit AMI image permissions",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ec2_editInstanceElasticIp",
            "description": "Associate or disassociate an Elastic IP with an EC2 Instance",
            "metadata": [
                { "type": "result" }, 
                { "type": "enabled", "required": false}
            ]
        },
        {
            "name": "ec2_editInstanceShutdownBehavior",
            "description": "Adjust the shutdown behavior of an EC2 Instance",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ec2_editInstanceTerminationProtection",
            "description": "Adjust the termination protection of an EC2 Instance",
            "metadata": [
                { "type": "result" }, 
                { "type": "enabled", "required": false}
            ]
        },
        {
            "name": "ec2_editInstanceType",
            "description": "Adjust the instance type of an EC2 Instance",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ec2_editInstanceUserData",
            "description": "Adjust an EC2 Instance's user data",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ec2_editSecurityGroupPermission",
            "description": "Alter an EC2 security group permission",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ec2_editVolumeAttachment",
            "description": "Attach (enabled = true) or detach a volume",
            "metadata": [
                { "type": "result" },
                { "type": "enabled" }
            ]
        },
        {
            "name": "ec2_exportPrivateKey",
            "description": "Save the private key of an EC2 Key Pair out to disk",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ec2_importPrivateKey",
            "description": "Store the private key of an EC2 Key Pair in internal storage",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ec2_launchInstance",
            "description": "Launch an EC2 Instance",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ec2_openInstances",
            "description": "Open a window to view EC2 Instances",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "ec2_openAMIs",
            "description": "Open a window to view EC2 AMIs",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "ec2_openElasticIPs",
            "description": "Open a window to view EC2 Elastic IPs",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "ec2_openKeyPairs",
            "description": "Open to view EC2 Key pairs",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "ec2_openSecurityGroups",
            "description": "Open a window to view EC2 Security Groups",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "ec2_openVolumes",
            "description": "Open a window to view EC2 Volumes",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "ec2_viewInstanceSystemLog",
            "description": "View the system log of an EC2 Instance",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "ecs_openCluster",
            "description": "Open to view status of an ECS Cluster",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "ec2_viewInstanceUserData",
            "description": "View an EC2 Instance's user data",
            "metadata": [
                { "type": "result" }
            ]
        },
        {
            "name": "ecs_enableExecuteCommand",
            "description": "Called when ECS execute command is enabled",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "ecs_disableExecuteCommand",
            "description": "Called when ECS execute command is disabled",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "ecs_runExecuteCommand",
            "description": "Called when the ECS execute command is run",
            "metadata": [{ "type": "result" }, { "type": "ecsExecuteCommandType" }]
        },
        {
            "name": "ecr_copyRepositoryUri",
            "description": "Called when the user copies the repository uri from a node"
        },
        {
            "name": "ecr_copyTagUri",
            "description": "Called when the user copies the repository tag uri from a node. The tag uri is the repository uri + : + the tag name"
        },
        {
            "name": "ecr_createRepository",
            "description": "Called when creating a new ECR repository",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "ecr_deleteRepository",
            "description": "Called when deleting an existing ECR repository",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "ecr_deleteTags",
            "unit": "Count",
            "description": "Called when deleting a tag in an ECR repository. The operation is a batch operation by default, value represents the number of tags deleted.",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "ecr_deployImage",
            "description": "Called when deploying an image to ECR",
            "metadata": [
                { "type": "result" },
                { "type": "ecrDeploySource", "required": false },
                { "type": "duration", "required": false }
            ]
        },
        {
            "name": "ecs_deployScheduledTask",
            "description": "Called when deploying a scheduled task to an ECS cluster",
            "metadata": [
                { "type": "result" },
                { "type": "ecsLaunchType" },
                { "type": "duration", "required": false }
            ]
        },
        {
            "name": "ecs_deployService",
            "description": "Called when deploying a service to an ECS cluster",
            "metadata": [
                { "type": "result" },
                { "type": "ecsLaunchType" },
                { "type": "duration", "required": false }
            ]
        },
        {
            "name": "ecs_deployTask",
            "description": "Called when deploying a task to an ECS cluster",
            "metadata": [
                { "type": "result" },
                { "type": "ecsLaunchType" },
                { "type": "duration", "required": false }
            ]
        },
        {
            "name": "ecs_publishWizard",
            "description": "Called when user completes the ECS publish wizard",
            "metadata": [
                { "type": "result" },
                { "type": "duration", "required": false }
            ]
        },
        {
            "name": "ecs_openRepository",
            "description": "Open to view status of an ECS Repository",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "ecs_deleteService",
            "description": "Called when user deletes an ECS service",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "ecs_editService",
            "description": "Edit configuration of an ECS service",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "ecs_deleteCluster",
            "description": "Delete an ECS cluster",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "ecs_stopTask",
            "unit": "Count",
            "description": "Stop ECS task(s)",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "ecs_deleteScheduledTask",
            "unit": "Count",
            "description": "Delete ECS Scheduled task(s)",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "feedback_result",
            "description": "Called while submitting in-IDE feedback",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "file_editAwsFile",
            "description": "Use authoring features such as autocompletion, syntax checking, and highlighting, for AWS filetypes (CFN, SAM, etc.). Emit this _once_ per file-editing session for a given file. Ideally this is emitted only if authoring features are used, rather than merely opening or touching a file.",
            "metadata": [
                { "type": "result" },
                { "type": "awsFiletype", "required": true},
                { "type": "filenameExt", "required": false}
            ]
        },
        {
            "name": "iam_openRole",
            "description": "Open a window to view/edit IAM Role Policy",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "iam_openGroup",
            "description": "Open a window to view/edit IAM Group Policy",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "iam_openUser",
            "description": "Open a window to view/edit IAM User Configuration",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "iam_open",
            "description": "Open a window to view/edit an IAM resource",
            "metadata": [
                { "type": "result" },
                { "type": "iamResourceType" }
            ]
        },
        {
            "name": "iam_create",
            "description": "Create an IAM resource",
            "metadata": [
                { "type": "result" },
                { "type": "iamResourceType" }
            ]
        },
        {
            "name": "iam_delete",
            "description": "Delete an IAM resource",
            "metadata": [
                { "type": "result" },
                { "type": "iamResourceType" }
            ]
        },
        {
            "name": "iam_edit",
            "description": "Edits policy/configuration associated with an IAM resource",
            "metadata": [
                { "type": "result" },
                { "type": "iamResourceType" }
            ]
        },
        {
            "name": "iam_createUserAccessKey",
            "description": "Create Access Key for an IAM user",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "iam_deleteUserAccessKey",
            "description": "Delete Access Key for an IAM user",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "lambda_delete",
            "description": "called when deleting lambdas remotely",
            "unit": "None",
            "metadata": [{ "type": "duration" }, { "type": "result" }]
        },
        {
            "name": "lambda_configure",
            "description": "Called when opening the local configuration of a Lambda to edit",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "lambda_create",
            "description": "Called when creating lambdas remotely",
            "metadata": [{ "type": "runtime" }]
        },
        {
            "name": "lambda_createProject",
            "description": "Called when creating a lambda project",
            "metadata": [
                { "type": "result" },
                { "type": "language" },
                { "type": "templateName" },
                { "type": "variant", "required": false }
            ]
        },
        {
            "name": "lambda_goToHandler",
            "description": "Jump to a lambda handler from elsewhere",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "lambda_editFunction",
            "description": "Called when creating lambdas remotely",
            "metadata": [{ "type": "update", "required": false }, { "type": "lambdaPackageType" }, { "type": "result" }]
        },
        {
            "name": "lambda_invokeRemote",
            "description": "Called when invoking lambdas remotely",
            "metadata": [{ "type": "runtime", "required": false }, { "type": "result" }]
        },
        {
            "name": "lambda_invokeLocal",
            "description": "Called when invoking lambdas locally (with SAM in most toolkits)",
            "metadata": [
                { "type": "runtime", "required": false },
                { "type": "version", "required": false },
                { "type": "lambdaPackageType" },
                { "type": "result" },
                { "type": "debug" },
                { "type": "lambdaArchitecture", "required": false }
            ]
        },
        {
            "name": "lambda_import",
            "description": "Called when importing a remote Lambda function",
            "metadata": [{ "type": "runtime", "required": false }, { "type": "result" }]
        },
        {
            "name": "lambda_updateFunctionCode",
            "description": "Called when updating a Lambda function's code outside the context of a SAM template",
            "metadata": [{ "type": "runtime", "required": false }, { "type": "result" }]
        },
        {
            "name": "lambda_deploy",
            "description": "Called when deploying a Lambda Function",
            "metadata": [
                { "type": "lambdaPackageType" },
                { "type": "result" },
                { "type": "initialDeploy" },
                { "type": "duration", "required": false },
                { "type": "runtime", "required": false },
                { "type": "platform", "required": false },
                { "type": "lambdaArchitecture", "required": false },
                { "type": "language", "required": false },
                { "type": "xrayEnabled", "required": false },
                { "type": "serviceType", "required": false },
                { "type": "source" , "required": false}
            ]
        },
        {
            "name": "lambda_publishWizard",
            "description": "Called when user completes the Lambda publish wizard",
            "metadata": [
                { "type": "result" },
                { "type": "duration", "required": false },
                { "type": "serviceType", "required": false },
                { "type": "source" , "required": false}
            ]
        },
        {
            "name": "cloudformation_delete",
            "description": "Called when deleting a cloudformation stack",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "rds_getCredentials",
            "description": "Called when getting IAM/SecretsManager credentials for a RDS database. Value represents how long it takes in ms.",
            "unit": "Milliseconds",
            "metadata": [{ "type": "result" }, { "type": "databaseCredentials" }, { "type": "databaseEngine" }]
        },
        {
            "name": "rds_openInstances",
            "description": "Open a window to view RDS DB Instances",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "rds_openSecurityGroups",
            "description": "Open a window to view RDS Security Groups",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "rds_openSubnets",
            "description": "Open a window to view RDS Subnet Groups",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "rds_launchInstance",
            "description": "Launch a RDS DB instance",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "rds_createSecurityGroup",
            "description": "Create a RDS security group",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "rds_createSubnetGroup",
            "description": "Create a RDS subnet group",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "rds_deleteInstance",
            "description": "Delete a RDS DB instance",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "rds_deleteSecurityGroup",
            "unit": "Count",
            "description": "Delete RDS security group(s)",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "rds_deleteSubnetGroup",
            "unit": "Count",
            "description": "Delete RDS subnet group(s)",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "rds_createConnectionConfiguration",
            "description": "Called when creating a new database connection configuration to for a RDS database. In Datagrip we do not get this infromation if it is created directly, so this is only counts actions.",
            "metadata": [
                { "type": "result" },
                { "type": "databaseCredentials" },
                { "type": "databaseEngine", "required": false }
            ]
        },
        {
            "name": "redshift_getCredentials",
            "description": "Called when getting IAM/SecretsManager credentials for a Redshift database. Value represents how long it takes in ms.",
            "unit": "Milliseconds",
            "metadata": [{ "type": "result" }, { "type": "databaseCredentials" }]
        },
        {
            "name": "redshift_createConnectionConfiguration",
            "description": "Called when creating a new database connection configuration to for a Redshift database. In Datagrip we do not get this infromation if it is created directly, so this only counts actions.",
            "metadata": [{ "type": "result" }, { "type": "databaseCredentials" }]
        },
        {
            "name": "sam_deploy",
            "description": "Called when deploying a SAM application",
            "metadata": [
                { "type": "result" },
                { "type": "version", "required": false }
            ]
        },
        {
            "name": "sam_sync",
            "description": "Called when syncing a SAM application",
            "metadata": [
                { "type": "result" }, 
                { "type": "syncedResources" },
                { "type": "lambdaPackageType", "required": false },
                { "type": "reason", "required": false }, 
                { "type": "version", "required": false }
            ]
        },
        {
            "name": "sam_init",
            "description": "Called when initing a SAM application",
            "metadata": [
                { "type": "result" },
                { "type": "runtime", "required": false },
                { "type": "templateName", "required": false },
                { "type": "version", "required": false },
                { "type": "lambdaPackageType", "required": false },
                { "type": "reason", "required": false },
                { "type": "eventBridgeSchema", "required": false },
                { "type": "lambdaArchitecture", "required": false }
            ]
        },
        {
            "name": "sam_info",
            "description": "Called when checking if the SAM executable on the local machine is valid with a valid version",
            "passive": true,
            "metadata": [
                { "type": "result" },
                { "type": "reason", "required": false },
                { "type": "version", "required": false }
            ]
        },
        {
            "name": "schemas_view",
            "description": "Called when selecting an EventBridge schema to view",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "schemas_download",
            "description": "Called when downloading an EventBridge schema",
            "metadata": [{ "type": "result" }, { "type": "schemaLanguage", "required": false }]
        },
        {
            "name": "schemas_search",
            "description": "Called when searching an EventBridge schema registry",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "session_start",
            "description": "Called when starting the plugin",
            "passive": true
        },
        {
            "name": "session_end",
            "description": "Called when stopping the IDE on a best effort basis",
            "passive": true
        },
        {
            "name": "s3_copyBucketName",
            "description": "Copy the bucket name to the clipboard"
        },
        {
            "name": "s3_copyPath",
            "description": "Copy the path of a S3 object to the clipboard"
        },
        {
            "name": "s3_copyUri",
            "description": "Copy the S3 URI of a S3 object to the clipboard (e.g. s3://<bucketName>/abc.txt)",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "s3_copyUrl",
            "description": "Copy the URL of a S3 object to the clipboard",
            "metadata": [{ "type": "result" }, { "type": "presigned" }]
        },
        {
            "name": "s3_createBucket",
            "description": "Create a S3 bucket",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "s3_deleteBucket",
            "description": "Delete a S3 bucket",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "s3_deleteObject",
            "description": "Delete S3 object(s)",
            "metadata": [
                { "type": "result" },
                { "type": "successCount", "required": false},
                { "type": "failedCount", "required": false}
            ]
        },
        {
            "name": "s3_createFolder",
            "description": "Create an S3 folder",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "s3_downloadObject",
            "description": "Download S3 object(s)",
            "metadata": [
                { "type": "result" },
                { "type": "successCount", "required": false},
                { "type": "failedCount", "required": false},
                { "type": "component", "required": false}
            ]
        },
        {
            "name": "s3_downloadObjects",
            "description": "Download multiple S3 objects",
            "unit": "Count",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "s3_uploadObject",
            "description": "Upload S3 object(s)",
            "metadata": [
                { "type": "result" },
                { "type": "successCount", "required": false},
                { "type": "failedCount", "required": false},
                { "type": "component", "required": false}
            ]
        },
        {
            "name": "s3_renameObject",
            "description": "Rename a single S3 object",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "s3_uploadObjects",
            "description": "Upload multiple S3 objects",
            "unit": "Count",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "s3_openEditor",
            "description": "Open a view of a S3 bucket",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "s3_editObject",
            "description": "Edit or view one or more S3 objects in the IDE",
            "unit":  "Count",
            "metadata": [
                { "type": "result" },
                { "type": "component", "required": false}
            ]
        },
        {
            "name": "s3_openBucketProperties",
            "description": "Open a window to view S3 bucket properties",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "s3_openMultipartUpload",
            "description": "Open a window to view S3 Multipart upload",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "toolkit_init",
            "description": "The Toolkit has completed initialization",
            "metadata": [
                { "type": "result", "required": false },
                { "type": "duration", "required": false }
            ],
            "passive": true
        },
        {
            "name": "toolkit_viewLogs",
            "description": "View logs for the toolkit"
        },
        {
            "name": "sqs_openQueue",
            "description": "Open an SQS queue. Initially opens to either the send message pane or poll messages pane.",
            "metadata": [{ "type": "sqsQueueType" }]
        },
        {
            "name": "sqs_createQueue",
            "description": "Create a new SQS queue",
            "metadata": [{ "type": "result" }, { "type": "sqsQueueType", "required": false }]
        },
        {
            "name": "sqs_sendMessage",
            "description": "Send a message to an SQS queue",
            "metadata": [{ "type": "result" }, { "type": "sqsQueueType" }]
        },
        {
            "name": "sqs_deleteMessages",
            "description": "Delete one or more messages from an SQS queue. Value indicates the number of messages that we tried to delete.",
            "unit": "Count",
            "metadata": [{ "type": "result" }, { "type": "sqsQueueType" }]
        },
        {
            "name": "sqs_subscribeSns",
            "description": "Subscribe the queue to messages from an sns topic",
            "metadata": [{ "type": "result" }, { "type": "sqsQueueType" }]
        },
        {
            "name": "sqs_configureLambdaTrigger",
            "description": "Configure the queue as a trigger for a Lambda",
            "metadata": [{ "type": "result" }, { "type": "sqsQueueType" }]
        },
        {
            "name": "sqs_editQueueParameters",
            "description": "Edit the Queue parameters",
            "metadata": [{ "type": "result" }, { "type": "sqsQueueType" }]
        },
        {
            "name": "sqs_purgeQueue",
            "description": "Purge all messages from the queue",
            "metadata": [{ "type": "result" }, { "type": "sqsQueueType" }]
        },
        {
            "name": "sqs_deleteQueue",
            "description": "Called when user deletes a SQS queue",
            "metadata": [{ "type": "result" }, { "type": "sqsQueueType", "required": false }]
        },
        {
            "name": "sns_createTopic",
            "description": "Create a SNS Topic",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "sns_createSubscription",
            "description": "Create a SNS Subscription",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "sns_openTopic",
            "description": "Open a window to view details of SNS Topic",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "sns_openSubscriptions",
            "description": "Open a window to view SNS Subscriptions",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "sns_deleteTopic",
            "description": "Called when user deletes a SNS Topic",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "sns_deleteSubscription",
            "description": "Called when user deletes SNS subscription(s)",
            "unit": "Count",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "sns_publishMessage",
            "description": "Publish message to a SNS topic",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "vpc_openRouteTables",
            "description": "Open a window to view VPC RouteTable",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "vpc_openGateways",
            "description": "Open a window to view VPC Internet Gateway",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "vpc_openACLs",
            "description": "Open a window to view VPC Network ACLs",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "vpc_openSubnets",
            "description": "Open a window to view VPC Subnets",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "vpc_openVPCs",
            "description": "Open a window to view VPC details",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudwatchinsights_openEditor",
            "description": "Open the insights query editor",
            "metadata": [{ "type": "insightsDialogOpenSource" }]
        },
        {
            "name": "cloudwatchinsights_executeQuery",
            "description": "Start an insights query",
            "metadata": [
                { "type": "result" },
                { "type": "insightsQueryTimeType" },
                { "type": "insightsQueryStringType" }
            ]
        },
        {
            "name": "cloudwatchinsights_saveQuery",
            "description": "Save query parameters to AWS",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudwatchinsights_retrieveQuery",
            "description": "Retrieve list of available saved queries from AWS",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "cloudwatchinsights_openDetailedLogRecord",
            "description": "Get all details for the selected log record",
            "metadata": [{ "type": "result" }]
        },
        {
            "name": "toolkit_getExternalResource",
            "description": "The toolkit tried to retrieve blob data from a url",
            "metadata": [
                {
                    "type": "url",
                    "required": true
                },
                {
                    "type": "result",
                    "required": true
                },
                {
                    "type": "reason",
                    "required": false
                }
            ],
            "passive": true
        },
        {
            "name": "toolkit_showNotification",
            "description": "The toolkit tried to show a notification message",
            "metadata": [
                {
                    "type": "result",
                    "required": true
                },
                {
                    "type": "id",
                    "required": true
                },
                {
                    "type": "component",
                    "required": true
                },
                {
                    "type": "reason",
                    "required": false
                }
            ]
        },
        {
            "name": "toolkit_showAction",
            "description": "The toolkit tried to show an action. Source represents the notification that produced the action",
            "metadata": [
                {
                    "type": "result",
                    "required": true
                },
                {
                    "type": "id",
                    "required": true
                },
                {
                    "type": "source",
                    "required": true
                },
                {
                    "type": "component",
                    "required": true
                },
                {
                    "type": "reason",
                    "required": false
                }
            ]
        },
        {
            "name": "toolkit_invokeAction",
            "description": "A user invoked an action. Source represents the notification that produced the action",
            "metadata": [
                {
                    "type": "result",
                    "required": true
                },
                {
                    "type": "id",
                    "required": true
                },
                {
                    "type": "source",
                    "required": true
                },
                {
                    "type": "component",
                    "required": true
                },
                {
                    "type": "reason",
                    "required": false
                }
            ]
        },
        {
            "name": "dynamicresource_getResource",
            "description": "Open the dynamic resource model in the IDE",
            "metadata": [
                {
                    "type": "result"
                },
                {
                    "type": "resourceType"
                }
            ]
        },
        {
            "name": "dynamicresource_listResource",
            "description": "Expand a Resource Type node",
            "metadata": [
                {
                    "type": "result"
                },
                {
                    "type": "resourceType"
                }
            ]
        },
        {
            "name": "dynamicresource_selectResources",
            "description": "Change the list of available dynamic resources in the AWS Explorer"
        },
        {
            "name": "dynamicresource_copyIdentifier",
            "description": "Copy the dynamic resource identifier",
            "metadata": [
                {
                    "type": "resourceType"
                }
            ]
        },
        {
            "name": "dynamicresource_mutateResource",
            "description": "A dynamic resource mutation request completed",
            "metadata": [
                {
                    "type": "result"
                },
                {
                    "type": "resourceType"
                },
                {
                    "type": "dynamicResourceOperation"
                },
                {
                    "type": "duration"
                }
            ]
        },
        {
            "name": "aws_experimentActivation",
            "description": "An experiment was activated or deactivated in the Toolkit",
            "metadata": [
                {
                    "type": "experimentId"
                },
                {
                    "type": "experimentState"
                }
            ]
        },
        {
            "name": "aws_toolInstallation",
            "description": "An external tool was installed automatically",
            "metadata": [
                {
                    "type": "toolId"
                },
                {
                    "type": "result"
                }
            ],
            "passive": true
        },
        {
            "name": "aws_modifySetting",
            "description": "An setting was changed by users in the Toolkit. This metric can optionally provide the new state of the setting via settingState.",
            "metadata": [
                {
                    "type": "settingId"
                },
                {
                    "type": "settingState",
                    "required": false
                }
            ]
        },
        {
            "name": "ui_click",
            "description": "User clicked/activated a UI element. This does not necessarily have to be an explicit mouse click. Any user action that has the same behavior as a mouse click can use this event.",
            "metadata": [{ "type": "elementId" }]
        },
        {
            "name": "deeplink_open",
            "description": "User requested that a resource be opened in the browser using the deeplink service",
            "metadata": [
                {
                    "type": "source"
                },
                {
                    "type": "result"
                },
                {
                    "type": "serviceType",
                    "required": false
                }
            ],
            "passive": true
        },
        {
            "name": "amazonq_startChat",
            "description": "Number of times the user have triggered /dev and started the chat",
            "unit": "Count",
            "metadata": [{ "type": "amazonqConversationId" }]
        },
        {
            "name": "amazonq_endChat",
            "description": "Captures end of the conversation with amazonq /dev",
            "metadata": [
                { "type": "amazonqConversationId" },
                { "type": "amazonqEndOfTheConversationLatency", "required": false }
            ]
        },
        {
            "name": "amazonq_approachInvoke",
            "description": "Captures Approach generation process",
            "metadata": [
                { "type": "amazonqConversationId" },
                { "type": "amazonqGenerateApproachIteration" },
                { "type": "amazonqGenerateApproachLatency" }
            ]
        },
        {
            "name": "amazonq_isApproachAccepted",
            "description": "User has accepted the approach generated",
            "metadata": [{ "type": "enabled" }, { "type": "amazonqConversationId" }]
        },
        {
            "name": "amazonq_codeGenerationInvoke",
            "description": "Captures Code Generation generation process",
            "metadata": [
                { "type": "amazonqConversationId" },
                { "type": "amazonqGenerateCodeIteration" },
                { "type": "amazonqGenerateCodeResponseLatency" },
                { "type": "amazonqCodeGenerationResult" },
                { "type": "amazonqNumberOfFilesGenerated", "required": false },
                { "type": "amazonqRepositorySize" },
                { "type": "amazonqNumberOfReferences", "required": false }
            ]
        },
        {
            "name": "amazonq_isAcceptedCodeChanges",
            "description": "User applied code changes generated for the task.",
            "metadata": [{ "type": "enabled" }, { "type": "amazonqConversationId" }]
        },
        {
            "name": "amazonq_isProvideFeedbackForCodeGen",
            "description": "User asked to regenerate code generation with a comment",
            "metadata": [{ "type": "enabled" }, { "type": "amazonqConversationId" }]
        },
        {
            "name": "amazonq_isReviewedChanges",
            "description": "User reviewed changes",
            "passive": true,
            "metadata": [{ "type": "enabled" }, { "type": "amazonqConversationId" }]
        },
        {
            "name": "amazonq_codeGenerationThumbsUp",
            "description": "User clicked on the thumbs up button to say that they are unsatisfied",
            "unit": "Count",
            "metadata": [{ "type": "amazonqConversationId" }]
        },
        {
            "name": "amazonq_codeGenerationThumbsDown",
            "description": "User clicked on the thumbs down button to say that they are unsatisfied",
            "unit": "Count",
            "metadata": [{ "type": "amazonqConversationId" }]
        },
        {
            "name": "amazonq_approachThumbsUp",
            "description": "User clicked on the thumbs up button, to mention that they are satisfied",
            "unit": "Count",
            "metadata": [{ "type": "amazonqConversationId" }]
        },
        {
            "name": "amazonq_approachThumbsDown",
            "description": "User clicked on the thumbs down button to say that they are unsatisfied",
            "unit": "Count",
            "metadata": [{ "type": "amazonqConversationId" }]
        },
        {
            "name": "codewhisperer_codePercentage",
            "description": "Percentage of user tokens against suggestions until 5 mins of time",
            "metadata": [
                {
                    "type": "codewhispererAcceptedTokens"
                },
                {
                    "type": "codewhispererLanguage"
                },
                {
                    "type": "codewhispererPercentage"
                },
                {
                    "type": "codewhispererTotalTokens"
                },
                {
                    "type": "codewhispererUserGroup"
                },
                {
                    "type": "reason",
                    "required": false
                },
                {
                    "type": "successCount"
                },
                {
                    "type": "codewhispererCustomizationArn",
                    "required": false
                }
            ],
            "passive": true
        },
        {
            "name": "codewhisperer_securityScan",
            "description": "Client side invocation of the CodeWhisperer Security Scan",
            "metadata": [
                {
                    "type": "codewhispererCodeScanLines"
                },
                {
                    "type": "codewhispererCodeScanJobId",
                    "required": false
                },
                {
                    "type": "codewhispererCodeScanProjectBytes",
                    "required": false
                },
                {
                    "type": "codewhispererCodeScanSrcPayloadBytes"
                },
                {
                    "type": "codewhispererCodeScanBuildPayloadBytes",
                    "required": false
                },
                {
                    "type": "codewhispererCodeScanSrcZipFileBytes"
                },
                {
                    "type": "codewhispererCodeScanBuildZipFileBytes",
                    "required": false
                },
                {
                    "type": "codewhispererCodeScanTotalIssues"
                },
                {
                    "type": "codewhispererCodeScanIssuesWithFixes",
                    "required": false
                },
                {
                    "type": "codewhispererLanguage"
                },
                {
                    "type": "duration"
                },
                {
                    "type": "contextTruncationDuration"
                },
                {
                    "type": "artifactsUploadDuration"
                },
                {
                    "type": "codeScanServiceInvocationsDuration"
                },
                {
                    "type": "reason",
                    "required": false
                },
                {
                    "type": "result"
                },
                {
                    "type": "credentialStartUrl",
                    "required": false
                }
            ]
        },
        {
            "name": "codewhisperer_serviceInvocation",
            "description": "Client side invocation of the CodeWhisperer service for suggestion",
            "metadata": [
                {
                    "type": "codewhispererAutomatedTriggerType",
                    "required": false
                },
                {
                    "type": "codewhispererCompletionType",
                    "required": false
                },
                {
                    "type": "codewhispererCursorOffset"
                },
                {
                    "type": "codewhispererLanguage"
                },
                {
                    "type": "codewhispererGettingStartedTask",
                    "required": false
                },
                {
                    "type": "codewhispererLastSuggestionIndex",
                    "required": false
                },
                {
                    "type": "codewhispererLineNumber"
                },
                {
                    "type": "codewhispererRequestId",
                    "required": false
                },
                {
                    "type": "codewhispererRuntime",
                    "required": false
                },
                {
                    "type": "codewhispererRuntimeSource",
                    "required": false
                },
                {
                    "type": "codewhispererSessionId",
                    "required": false
                },
                {
                    "type": "codewhispererSupplementalContextTimeout",
                    "required": false
                },
                {
                    "type": "codewhispererSupplementalContextIsUtg",
                    "required": false
                },
                {
                    "type": "codewhispererSupplementalContextLatency",
                    "required": false
                },
                {
                    "type": "codewhispererSupplementalContextLength",
                    "required": false
                },
                {
                    "type": "codewhispererTriggerType"
                },
                {
                    "type": "duration"
                },
                {
                    "type": "reason",
                    "required": false
                },
                {
                    "type": "result"
                },
                {
                    "type": "credentialStartUrl",
                    "required": false
                },
                {
                    "type": "codewhispererImportRecommendationEnabled",
                    "required": false
                },
                {
                    "type": "codewhispererUserGroup"
                },
                {
                    "type": "codewhispererCustomizationArn",
                    "required": false
                }
            ]
        },
        {
            "name": "codewhisperer_blockedInvocation",
            "description": "Client side invocation blocked by another invocation in progress",
            "metadata": [
                {
                    "type": "codewhispererAutomatedTriggerType",
                    "required": false
                },
                {
                    "type": "codewhispererCursorOffset"
                },
                {
                    "type": "codewhispererLanguage"
                },
                {
                    "type": "codewhispererLineNumber"
                },
                {
                    "type": "codewhispererTriggerType"
                },
                {
                    "type": "credentialStartUrl",
                    "required": false
                }
            ]
        },
        {
            "name": "codewhisperer_userDecision",
            "description": "User acceptance or rejection of each suggestion returned by the CodeWhisperer service request",
            "metadata": [
                {
                    "type": "codewhispererCompletionType"
                },
                {
                    "type": "codewhispererLanguage"
                },
                {
                    "type": "codewhispererGettingStartedTask",
                    "required": false
                },
                {
                    "type": "codewhispererPaginationProgress",
                    "required": false
                },
                {
                    "type": "codewhispererRequestId"
                },
                {
                    "type": "codewhispererRuntime",
                    "required": false
                },
                {
                    "type": "codewhispererRuntimeSource",
                    "required": false
                },
                {
                    "type": "codewhispererSessionId",
                    "required": false
                },
                {
                    "type": "codewhispererSuggestionIndex"
                },
                {
                    "type": "codewhispererSuggestionReferenceCount"
                },
                {
                    "type": "codewhispererSuggestionReferences",
                    "required": false
                },
                {
                    "type": "codewhispererSuggestionImportCount",
                    "required": false
                },
                {
                    "type": "codewhispererSuggestionState"
                },
                {
                    "type": "codewhispererSupplementalContextTimeout",
                    "required": false
                },
                {
                    "type": "codewhispererSupplementalContextIsUtg",
                    "required": false
                },
                {
                    "type": "codewhispererSupplementalContextLength",
                    "required": false
                },
                {
                    "type": "codewhispererTriggerType"
                },
                {
                    "type": "credentialStartUrl",
                    "required": false
                },
                {
                    "type": "codewhispererUserGroup"
                }
            ]
        },
        {
            "name": "codewhisperer_userTriggerDecision",
            "description": "User decision aggregated at trigger level",
            "metadata": [
                {
                    "type": "codewhispererSessionId",
                    "required": false
                },
                {
                    "type": "codewhispererFirstRequestId"
                },
                {
                    "type": "credentialStartUrl",
                    "required": false
                },
                {
                    "type": "codewhispererIsPartialAcceptance",
                    "required": false
                },
                {
                    "type": "codewhispererPartialAcceptanceCount",
                    "required": false
                },
                {
                    "type": "codewhispererCharactersAccepted",
                    "required": false
                },
                {
                    "type": "codewhispererCharactersRecommended",
                    "required": false
                },
                {
                    "type": "reason",
                    "required": false
                },
                {
                    "type": "codewhispererCompletionType"
                },
                {
                    "type": "codewhispererLanguage"
                },
                {
                    "type": "codewhispererGettingStartedTask",
                    "required": false
                },
                {
                    "type": "codewhispererTriggerType"
                },
                {
                    "type": "codewhispererAutomatedTriggerType",
                    "required": false
                },
                {
                    "type": "codewhispererLineNumber"
                },
                {
                    "type": "codewhispererCursorOffset"
                },
                {
                    "type": "codewhispererSuggestionCount"
                },
                {
                    "type": "codewhispererSuggestionImportCount"
                },
                {
                    "type": "codewhispererTotalShownTime",
                    "required": false
                },
                {
                    "type": "codewhispererTriggerCharacter",
                    "required": false
                },
                {
                    "type": "codewhispererTypeaheadLength"
                },
                {
                    "type": "codewhispererTimeSinceLastDocumentChange",
                    "required": false
                },
                {
                    "type": "codewhispererTimeSinceLastUserDecision",
                    "required": false
                },
                {
                    "type": "codewhispererTimeToFirstRecommendation",
                    "required": false
                },
                {
                    "type": "codewhispererPreviousSuggestionState",
                    "required": false
                },
                {
                    "type": "codewhispererSuggestionState"
                },
                {
                    "type": "codewhispererClassifierResult",
                    "required": false
                },
                {
                    "type": "codewhispererSupplementalContextTimeout",
                    "required": false
                },
                {
                    "type": "codewhispererSupplementalContextIsUtg",
                    "required": false
                },
                {
                    "type": "codewhispererSupplementalContextLength",
                    "required": false
                },
                {
                    "type": "codewhispererSupplementalContextStrategyId",
                    "required": false
                },
                {
                    "type": "codewhispererClassifierThreshold",
                    "required": false
                },
                {
                    "type": "codewhispererUserGroup"
                },
                {
                    "type": "codewhispererCustomizationArn",
                    "required": false
                },
                {
                    "type": "codewhispererFeatureEvaluations",
                    "required": false
                }
            ]
        },
        {
            "name": "codewhisperer_onboardingClick",
            "description": "This metric provides the particular language and task type selected by the user in the onboarding page by clicking on the Try Example button.",
            "metadata": [
                {
                    "type": "codewhispererLanguage"
                },
                {
                    "type": "codewhispererGettingStartedTask"
                }
            ]
        },
        {
            "name": "codewhisperer_userModification",
            "description": "Percentage of user modifications for the selected suggestion until a fixed period of time",
            "metadata": [
                {
                    "type": "codewhispererCompletionType"
                },
                {
                    "type": "codewhispererLanguage"
                },
                {
                    "type": "codewhispererModificationPercentage"
                },
                {
                    "type": "codewhispererRequestId"
                },
                {
                    "type": "codewhispererRuntime",
                    "required": false
                },
                {
                    "type": "codewhispererRuntimeSource",
                    "required": false
                },
                {
                    "type": "codewhispererSessionId",
                    "required": false
                },
                {
                    "type": "codewhispererSuggestionIndex"
                },
                {
                    "type": "codewhispererTriggerType"
                },
                {
                    "type": "credentialStartUrl",
                    "required": false
                },
                {
                    "type": "codewhispererUserGroup"
                }
            ]
        },
        {
            "name": "codewhisperer_perceivedLatency",
            "description": "The duration from user last modification to the first recommendation shown in milliseconds",
            "metadata": [
                {
                    "type": "codewhispererRequestId"
                },
                {
                    "type": "codewhispererSessionId",
                    "required": false
                },
                {
                    "type": "duration"
                },
                {
                    "type": "codewhispererTriggerType"
                },
                {
                    "type": "codewhispererCompletionType"
                },
                {
                    "type": "codewhispererLanguage"
                },
                {
                    "type": "credentialStartUrl",
                    "required": false
                },
                {
                    "type": "codewhispererUserGroup"
                }
            ]
        },
        {
            "name": "codewhisperer_clientComponentLatency",
            "description": "The latency from each CodeWhisperer components in milliseconds",
             "passive": true,
            "metadata": [
                {
                    "type": "codewhispererRequestId"
                },
                {
                    "type": "codewhispererSessionId"
                },
                {
                    "type": "codewhispererPreprocessingLatency"
                },
                {
                    "type": "codewhispererCredentialFetchingLatency"
                },
                {
                    "type": "codewhispererPostprocessingLatency"
                },
                {
                    "type": "codewhispererFirstCompletionLatency"
                },
                {
                    "type": "codewhispererEndToEndLatency"
                },
                {
                    "type": "codewhispererAllCompletionsLatency"
                },
                {
                    "type": "codewhispererCompletionType"
                },
                {
                    "type": "codewhispererTriggerType"
                },
                {
                    "type": "codewhispererLanguage"
                },
                {
                    "type": "credentialStartUrl",
                    "required": false
                },
                {
                    "type": "codewhispererUserGroup"
                }
            ]
        },
        {
            "name": "codecatalyst_createDevEnvironment",
            "description": "Create an Amazon CodeCatalyst Dev Environment",
            "metadata": [
                { "type": "userId" },
                { "type": "result" },
                {
                    "type": "codecatalyst_createDevEnvironmentRepoType",
                    "required": false
                }
            ]
        },
        {
            "name": "codecatalyst_updateDevEnvironmentSettings",
            "description": "Update properties of a Amazon CodeCatalyst Dev Environment",
            "metadata": [
                { "type": "userId" },
                { "type": "result" },
                { "type": "codecatalyst_updateDevEnvironmentLocationType" }
            ]
        },
        {
            "name": "codecatalyst_updateDevfile",
            "description": "Trigger a devfile update on a Amazon CodeCatalyst dev environment",
            "metadata": [
                { "type": "userId" },
                { "type": "result" }
            ]
        },
        {
            "name": "codecatalyst_localClone",
            "description": "Clone a Amazon CodeCatalyst code repository locally",
            "metadata": [
                { "type": "userId" },
                { "type": "result" }
            ]
        },
        {
            "name": "codecatalyst_connect",
            "description": "Connect to a Amazon CodeCatalyst dev environment",
            "metadata": [
                { "type": "userId" },
                { "type": "result" }
            ]
        },
        {
            "name": "codecatalyst_devEnvironmentWorkflowStatistic",
            "description": "Workflow statistic for connecting to a dev environment",
            "passive": true,
            "metadata": [
                { "type": "userId" },
                { "type": "result" },
                { "type": "duration"},
                { "type": "codecatalyst_devEnvironmentWorkflowStep"},
                { "type": "codecatalyst_devEnvironmentWorkflowError", "required": false }
            ]
        },
        {
            "name": "codeTransform_totalRunTime",
            "passive": true,
            "description": "We want to log the total run time in the users experience for the IDE. The total runtime should end when all API's have finished running and the users is prompted for next step actions.",
            "metadata": [
                {
                    "type": "codeTransformSessionId",
                    "required": true
                },
                {
                    "type": "codeTransformRunTimeLatency",
                    "required": true
                },
                {
                    "type": "codeTransformResultStatusMessage",
                    "required": false
                }
            ]
        },
        {
            "name": "codeTransform_isDoubleClickedToTriggerUserModal",
            "description": "The code transform button in the devtools to initiate the pre transform user modal window.",
            "metadata": [
                {
                    "type": "codeTransformSessionId",
                    "required": true
                },
                {
                    "type": "codeTransformStartSrcComponents",
                    "required": true
                }
            ]
        },
        {
            "name": "codeTransform_isDoubleClickedToTriggerInvalidProject",
            "description": "The code transform button in the devtools to initiate the job but there is a validation error.",
            "metadata": [
                {
                    "type": "codeTransformPreValidationError",
                    "required": true
                },
                {
                    "type": "codeTransformSessionId",
                    "required": true
                },
                { "type": "result", "required": true },
                { "type": "reason", "required": true }
            ]
        },
        {
            "name": "codeTransform_jobIsStartedFromUserPopupClick",
            "description": "The user initiates a transform job from the pre transform user modal window.",
            "metadata": [
                {
                    "type": "codeTransformSessionId",
                    "required": true
                }
            ]
        },
        {
            "name": "codeTransform_jobIsResumedAfterIdeClose",
            "description": "The user was previously running a transformation and came back to IDE to see it still running",
            "metadata": [
                {
                    "type": "codeTransformSessionId",
                    "required": true
                },
                {
                    "type": "codeTransformJobId",
                    "required": true
                },
                {
                    "type": "codeTransformStatus",
                    "required": true
                }
            ]
        },
        {
            "name": "codeTransform_jobIsClosedDuringIdeRun",
            "description": "The user closes their IDE and stops viewing the transformation.",
            "metadata": [
                {
                    "type": "codeTransformSessionId",
                    "required": true
                },
                {
                    "type": "codeTransformJobId",
                    "required": true
                },
                {
                    "type": "codeTransformStatus",
                    "required": true
                }
            ]
        },
        {
            "name": "codeTransform_jobIsStartedFromChatPrompt",
            "description": "The user initiates a transform job from Amazon Q chat prompt.",
            "metadata": [
                {
                    "type": "codeTransformSessionId",
                    "required": true
                }
            ]
        },
        {
            "name": "codeTransform_jobIsCanceledFromUserPopupClick",
            "description": "The code transform button to initiate the pre transform user modal.",
            "metadata": [
                {
                    "type": "codeTransformSessionId",
                    "required": true
                }
            ]
        },
        {
            "name": "codeTransform_jobStartedCompleteFromPopupDialog",
            "passive": true,
            "description": "After modal validation of inputs, code execution will start and we will fire this event.",
            "metadata": [
                {
                    "type": "codeTransformJavaSourceVersionsAllowed",
                    "required": true
                },
                {
                    "type": "codeTransformJavaTargetVersionsAllowed",
                    "required": true
                },
                {
                    "type": "codeTransformSessionId",
                    "required": true
                }
            ]
        },
        {
            "name": "codeTransform_jobStatusChanged",
            "passive": true,
            "description": "During the transformation progress, log the status steps returning from the API.",
            "metadata": [
                {
                    "type": "codeTransformSessionId",
                    "required": true
                },
                {
                    "type": "codeTransformJobId",
                    "required": true
                },
                {
                    "type": "codeTransformStatus",
                    "required": true
                }
            ]
        },
        {
            "name": "codeTransform_configurationFileSelectedChanged",
            "description": "Fire a change event when users select a new configuration/module file from the dropdown.",
            "metadata": [
                {
                    "type": "codeTransformSessionId",
                    "required": true
                }
            ]
        },
        {
            "name": "codeTransform_jobIsCancelledByUser",
            "description": "After a job is running the user has the ability to cancel the job.",
            "metadata": [
                {
                    "type": "codeTransformCancelSrcComponents",
                    "required": true
                },
                {
                    "type": "codeTransformSessionId",
                    "required": true
                },
                {
                    "type": "codeTransformRuntimeError",
                    "required": false
                }
            ]
        },
        {
            "name": "codeTransform_jobCreateZipEndTime",
            "description": "A timestamp for when the job is ending upload zip contents",
            "metadata": [
                {
                    "type": "codeTransformTotalByteSize",
                    "required": true
                },
                {
                    "type": "codeTransformSessionId",
                    "required": true
                },
                {
                    "type": "codeTransformRunTimeLatency",
                    "required": true
                }
            ]
        },
        {
            "name": "codeTransform_jobArtifactDownloadAndDeserializeTime",
            "description": "A timestamp for when the job is ending download zip contents",
            "metadata": [
                {
                    "type": "codeTransformJobId",
                    "required": true
                },
                {
                    "type": "codeTransformTotalByteSize",
                    "required": true
                },
                {
                    "type": "codeTransformSessionId",
                    "required": true
                },
                {
                    "type": "codeTransformRunTimeLatency",
                    "required": true
                },
                {
                    "type": "codeTransformRuntimeError",
                    "required": false
                }
            ]
        },
        {
            "name": "codeTransform_vcsViewerClicked",
            "description": "An interactivity measured when users click to view diff results.",
            "metadata": [
                {
                    "type": "codeTransformVCSViewerSrcComponents",
                    "required": true
                },
                {
                    "type": "codeTransformSessionId",
                    "required": true
                },
                {
                    "type": "codeTransformJobId",
                    "required": false
                }
            ]
        },
        {
            "name": "codeTransform_vcsDiffViewerVisible",
            "description": "A timestamp for when the diff view is being displayed to the user.",
            "metadata": [
                {
                    "type": "codeTransformSessionId",
                    "required": true
                },
                {
                    "type": "codeTransformJobId",
                    "required": false
                }
            ]
        },
        {
            "name": "codeTransform_vcsViewerCanceled",
            "description": "An interactivity measured when users cancel a patch view.",
            "metadata": [
                {
                    "type": "codeTransformPatchViewerCancelSrcComponents",
                    "required": true
                },
                {
                    "type": "codeTransformRuntimeError",
                    "required": false
                },
                {
                    "type": "codeTransformSessionId",
                    "required": true
                },
                {
                    "type": "codeTransformJobId",
                    "required": false
                }
            ]
        },
        {
            "name": "codeTransform_vcsViewerSubmitted",
            "description": "An interactivity measured when users submit their patch view results.",
            "metadata": [
                {
                    "type": "codeTransformSessionId",
                    "required": true
                },
                {
                    "type": "codeTransformJobId",
                    "required": false
                }
            ]
        },
        {
            "name": "codeTransform_logApiLatency",
            "passive": true,
            "description": "A general logging measure for all client side API's latency.",
            "metadata": [
                {
                    "type": "codeTransformApiNames",
                    "required": true
                },
                {
                    "type": "codeTransformRunTimeLatency",
                    "required": true
                },
                {
                    "type": "codeTransformSessionId",
                    "required": true
                },
                {
                    "type": "codeTransformRequestId",
                    "required": false
                },
                {
                    "type": "codeTransformJobId",
                    "required": false
                },
                {
                    "type": "codeTransformUploadId",
                    "required": false
                },
                {
                    "type": "codeTransformTotalByteSize",
                    "required": false
                }
            ]
        },
        {
            "name": "codeTransform_logGeneralError",
            "passive": true,
            "description": "A general logging measure for all client side API errors.",
            "metadata": [
                {
                    "type": "codeTransformApiErrorMessage",
                    "required": true
                },
                {
                    "type": "codeTransformSessionId",
                    "required": true
                },
                {
                    "type": "codeTransformJobId",
                    "required": false
                }
            ]
        },
        {
            "name": "codeTransform_logApiError",
            "passive": true,
            "description": "A general logging measure for all client side API errors.",
            "metadata": [
                {
                    "type": "codeTransformApiErrorMessage",
                    "required": true
                },
                {
                    "type": "codeTransformApiNames",
                    "required": true
                },
                {
                    "type": "codeTransformSessionId",
                    "required": true
                },
                {
                    "type": "codeTransformRequestId",
                    "required": false
                },
                {
                    "type": "codeTransformJobId",
                    "required": false
                }
            ]
        },
        {
            "name": "codeTransform_dependenciesCopied",
            "description": "The repo copies over at least one dependency successfully.",
            "metadata": [
                {
                    "type": "codeTransformSessionId",
                    "required": true
                }
            ]
        },
        {
            "name": "codeTransform_mvnBuildFailed",
            "description": "The maven command build failed.",
            "metadata": [
                {
                    "type": "codeTransformSessionId",
                    "required": true
                },
                {
                    "type": "codeTransformMavenBuildCommand",
                    "required": true
                },
                {
                    "type": "reason",
                    "required": false
                }
            ]
        }
    ]
}
